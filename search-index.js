crystal_doc_search_index_callback({"repository_name":"crystal_mpd","body":"# MPD::Client\n\n![Crystal CI](https://github.com/mamantoha/crystal_mpd/workflows/Crystal%20CI/badge.svg)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/crystal_mpd.svg)](https://github.com/mamantoha/crystal_mpd/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mamantoha.github.io/crystal_mpd/)\n[![License](https://img.shields.io/github/license/mamantoha/crystal_mpd.svg)](https://github.com/mamantoha/crystal_mpd/blob/master/LICENSE)\n\nConcurrent [Music Player Daemon](https://www.musicpd.org/) client written entirely in Crystal.\n\n## Main features\n\n- Filtering DSL\n- Range support\n- Callbacks\n- Command lists support\n- Binary responses\n- Client to client communicate\n- Logging\n- Handle exceptions\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crystal_mpd:\n    github: mamantoha/crystal_mpd\n```\n\n## Usage\n\n```crystal\nrequire \"crystal_mpd\"\n```\n\nAll functionality is contained in the `MPD::Client` class.\nCreating an instance of this class is as simple as:\n\n```crystal\nclient = MPD::Client.new(\"localhost\", 6600)\n```\n\nYou can also omit the `host` and `port`, and it will use the defaults:\n\n```crystal\nclient = MPD::Client.new(\"localhost\")\nclient = MPD::Client.new\n```\n\nYou can connect to a local socket (UNIX domain socket), specify an absolute path:\n\n```crystal\nclient = MPD::Client.new(\"/run/mpd/socket\")\n```\n\nIf a password specified for access to MPD:\n\n```crystal\nclient = MPD::Client.new(\"localhost\", password: \"password\")\n```\n\nThe client library can be used as follows:\n\n```crystal\nputs client.version # print the mpd version\nclient.play(2)      # begins playing the playlist at song number 2\nputs client.status  # print the current status of the player and the volume level\nclient.close        # send the close command\nclient.disconect    # disconnect from the server\n```\n\nCheck `MPD::Client` [source](https://mamantoha.github.io/crystal_mpd/MPD/Client.html) for supported commands.\n\nTo use all `crystal_mpd` functions you should use the latest stable MPD version (0.24.x).\n\n### Command lists\n\nCommand lists [documentation](https://mpd.readthedocs.io/en/latest/protocol.html#command-lists).\n\nTo facilitate faster adding of files etc. you can pass a list of commands all at once using a command list.\nThe command list begins with `command_list_ok_begin` and ends with `command_list_end`.\n\nIt does not execute any commands until the list has ended.\nThe return value is whatever the return for a list of commands is. On success for all commands, `OK` is returned.\n\nIf a command fails, no more commands are executed and the appropriate ACK error is returned.\n\nIf `command_list_ok_begin` is used, `list_OK` is returned for each successful command executed in the command list.\n\n```crystal\nclient.command_list_ok_begin # start a command list\nclient.update                # insert the update command into the list\nclient.status                # insert the status command into the list\nclient.command_list_end      # result will be a Array with the results\n```\n\nor\n\n```crystal\nclient.with_command_list do\n  client.update\n  client.status\nend\n```\n\n### Ranges\n\nRanges [documentation](https://mpd.readthedocs.io/en/latest/protocol.html#ranges).\n\nSome MPD commands (e.g. `move`, `delete`, `load`, `shuffle`, `playlistinfo`) support integer ranges in the format `START:END`, specifying a slice of songs. This is handled in `crystal_mpd` via `MPD::Range`, which supports both inclusive (`1..10`) and exclusive (`1...10`) ranges.\n\nNote: MPD treats `END` as exclusive, so we internally adjust inclusive ranges to match this behavior.\nAlso note that in MPD, song indexes start at 0 — the same as in Crystal.\n\n```crystal\n# Move first 3 songs to position 10, 11, and 12\nclient.move(0..2, 10)\n\n# Delete songs 0 and 1 (but NOT 2)\nclient.delete(0...2)\n\n# Delete songs 0, 1, and 2\nclient.delete(0..2)\n```\n\nEnd-less ranges also span to the end of the list:\n\n```crystal\n# Delete all songs from the playlist starting from index 10\nclient.delete(10..)\n# or using exclusive range (same effect)\nclient.delete(10...)\n```\n\nBegin-less ranges default the start to 0:\n\n```crystal\n# Delete songs 0, 1, and 2\nclient.delete(..2)\n\n# Delete songs 0 and 1\nclient.delete(...2)\n```\n\n### Filters\n\nFilters [documentation](https://mpd.readthedocs.io/en/latest/protocol.html#filters)\n\nAll commands which search for songs (`playlistsearch`, `playlistfind`, `searchaddpl`, `searchcount`, `searchplaylist`, `list`, `count`, `find`, `search`, `findadd`, `searchadd`) share a common filter syntax.\n\nThe `find` commands are case sensitive, which `search` and related commands ignore case.\n\n```crystal\nclient.search(\"(any =~ 'crystal')\")\nclient.searchaddpl(\"alt_rock\", \"(genre == 'Alternative Rock')\", sort: \"-ArtistSort\", window: (5..10))\nclient.list(\"filename\", \"((artist == 'Linkin Park') AND (date == '2003'))\")\n```\n\n#### Build MPD query expressions in Crystal\n\nThe `MPD::Filter` class helps you construct complex MPD filter expressions using a fluent and chainable DSL — fully compatible with MPD filter syntax.\n\nYou can build expressions using chainable methods like `#eq`, `#contains`, `#not_eq`, and logical `#not`.\n\n```crystal\nfilter =\n  MPD::Filter\n    .eq(\"Artist\", \"Linkin Park\")\n    .contains(\"Album\", \"Meteora\")\n    .not_eq(\"Title\", \"Numb\")\n    .sort(\"Track\")\n    .window(..10)\n\nclient.find(filter)\n```\n\nThis is equivalent to:\n\n```crystal\nexpression = \"((Artist == 'Linkin Park') AND (Album contains 'Meteora') AND (Title != 'Numb'))\"\n\nclient.find(expression, sort: \"Track\", window: ..10)\n```\n\nYou can also use this block-based filter DSL like:\n\n```crystal\nclient.search do |filter|\n  filter\n    .eq(:artist, \"Linkin Park\")\n    .match(:album, \"Meteora.*\")\n    .not_eq(:title, \"Numb\")\n    .sort(:track)\n    .window(..10)\nend\n```\n\n##### Supported methods\n\n| Method                        | MPD Equivalent                    |\n| ----------------------------- | --------------------------------- |\n| `eq(tag, value)`              | `(tag == 'value')`                |\n| `not_eq(tag, value)`          | `(tag != 'value')`                |\n| `match(tag, value)`           | `(tag =~ 'value')`                |\n| `not_match(tag, value)`       | `(tag !~ 'value')`                |\n| `eq_cs(tag, value)`           | `(tag eq_cs 'value')`             |\n| `eq_ci(tag, value)`           | `(tag eq_ci 'value')`             |\n| `not_eq_cs(tag, value)`       | `(!(tag eq_cs 'value'))`          |\n| `not_eq_ci(tag, value)`       | `(!(tag eq_ci 'value'))`          |\n| `contains(tag, value)`        | `(tag contains 'value')`          |\n| `not_contains(tag, value)`    | `(!(tag contains 'value'))`       |\n| `contains_cs(tag, value)`     | `(tag contains_cs 'value')`       |\n| `contains_ci(tag, value)`     | `(tag contains_ci 'value')`       |\n| `not_contains_cs(tag, value)` | `(!(tag contains_cs 'value'))`    |\n| `not_contains_ci(tag, value)` | `(!(tag contains_ci 'value'))`    |\n| `starts_with(tag, value)`     | `(tag starts_with 'value')`       |\n| `not_starts_with(tag, value)` | `(!(tag starts_with 'value'))`    |\n| `starts_with_cs(tag, value)`  | `(tag starts_with_cs 'value')`    |\n| `starts_with_ci(tag, value)`  | `(tag starts_with_ci 'value')`    |\n| `not_starts_with_cs(tag,val)` | `(!(tag starts_with_cs 'value'))` |\n| `not_starts_with_ci(tag,val)` | `(!(tag starts_with_ci 'value'))` |\n| `not(filter)`                 | `(!...)`                          |\n\nChaining multiple filters implies logical `AND`.\n\nNegate an expression with `#not`.\n\n```crystal\ninner = MPD::Filter.eq(\"Genre\", \"Pop\")\nouter = MPD::Filter.not(inner)\n# => \"(!(Genre == \\\"Pop\\\"))\"\n```\n\nwhich is equivalent to\n\n```crystal\nMPD::Filter.not_eq(\"Genre\", \"Pop\")\n# => \"(Genre != \\\"Pop\\\")\"\n```\n\n### Callbacks\n\nCallbacks are a simple way to make your client respond to events, rather that have to continuously ask the server for updates. This is done by having a background thread continuously check the server for changes.\n\nTo make use of callbacks, you need to:\n\n1. Create a MPD client instance with callbacks enabled.\n\n   ```crystal\n   client = MPD::Client.new(with_callbacks: true)\n   ```\n\n2. Setup a callback to be called when something happens.\n\n   ```crystal\n   client.on :state do |state|\n     puts \"[#{Time.local}] State was change to #{state}\"\n   end\n   ```\n\n`crystal_mpd` supports callbacks for any of the keys returned by `MPD::Client#status`.\n\nHere's the full list of events:\n\n- `:partition`\n- `:volume`\n- `:repeat`\n- `:random`\n- `:single`\n- `:consume`\n- `:playlist`\n- `:playlistlength`\n- `:state`\n- `:song`\n- `:songid`\n- `:nextsong`\n- `:nextsongid`\n- `:time`\n- `:elapsed`\n- `:duration`\n- `:bitrate`\n- `:xfade`\n- `:mixrampdb`\n- `:mixrampdelay`\n- `:audio`\n- `:updating_db`\n- `:error`\n- `:lastloadedplaylist`\n\n```crystal\nclient = MPD::Client.new(with_callbacks: true)\nclient.callbacks_timeout = 2.seconds\n\nclient.on :state do |state|\n  puts \"[#{Time.local}] State was change to #{state}\"\nend\n\nclient.on :song do\n  if (current_song = client.currentsong)\n    puts \"[#{Time.local}] 🎵 #{current_song[\"Artist\"]} - #{current_song[\"Title\"]}\"\n  end\nend\n\n# Keep the program running\nloop { sleep 1.second }\n```\n\nThe above will connect to the server like normal, but this time it will create a new thread\nthat loops until you issue an exit. This loop checks the server, then sleeps for 2 seconds, then loops.\n\nIn addition to registering individual event listeners using `#on`, the MPD client also supports a global callback listener using `#on_callback`.\n\nThis method allows you to handle all events in a single block and react based on the event type.\n\n```crystal\nclient = MPD::Client.new(with_callbacks: true)\n\nclient.on_callback do |event, value|\n  case event\n  when .state?\n    puts \"State changed to #{value}\"\n  when .song?\n    puts \"Now playing: #{value}\"\n  when .repeat?\n    puts \"Repeat mode: #{value == \"1\" ? \"On\" : \"Off\"}\"\n  else\n    puts \"[#{event}] → #{value}\"\n  end\nend\n\n# Keep the program running\nloop { sleep 1.second }\n```\n\nYou can combine `#on_callback` with specific `#on` handlers. For example:\n\n```crystal\nclient.on(:state) { |val| puts \"STATE: #{val}\" }\n\nclient.on_callback do |event, value|\n  puts \"[ALL EVENTS] #{event} => #{value}\"\nend\n```\n\n### Binary responses\n\nSome commands can return binary data.\n\n```crystal\nclient = MPD::Client.new\n\nif (current_song = client.currentsong)\n  if (response = client.albumart(current_song[\"file\"]))\n    data, binary = response\n    # data # => {\"size\" => \"30219\", \"type\" => \"image/jpeg\", \"binary\" => \"5643\"}\n\n    extension = MIME.extensions(data[\"type\"]).first? || \".png\"\n\n    file = File.open(\"cover#{extension}\", \"w\")\n    file.write(binary.to_slice)\n  end\nend\n```\n\nThe above will locate album art for the current song and save image to `cover.jpg` file.\n\n### Client-to-Client communication\n\n`crystal_mpd` supports MPD's built-in client-to-client messaging system via channels.\nThis allows clients to exchange messages in real time through the MPD server.\n\n#### Supported Methods\n\n```crystal\nclient.subscribe(\"my_channel\")          # Subscribes to a channel\nclient.unsubscribe(\"my_channel\")        # Unsubscribes from a channel\nclient.channels                         # Returns a list of all existing channels\nclient.readmessages                     # Reads messages sent to subscribed channels\nclient.sendmessage(\"my_channel\", \"Hi!\") # Sends a message to a specific channel\n```\n\n#### Example\n\n```crystal\nclient.subscribe(\"notifications\")\n\n# Somewhere else, another client sends a message\nclient.sendmessage(\"notifications\", \"System update available\")\n\n# The first client reads the message\nmessages = client.readmessages\nputs messages\n# => [{\"channel\" => \"notifications\", \"message\" => \"System update available\"}]\n```\n\n### Logging\n\n```crystal\nrequire \"crystal_mpd\"\n\nclient = MPD::Client.new\n\nMPD::Log.level = :debug\nMPD::Log.backend = ::Log::IOBackend.new\n```\n\n## Development\n\nInstall dependencies:\n\n```console\nshards\n```\n\nTo run test:\n\n```console\ncrystal spec\n```\n\n## Who's using `MPD::Client`\n\nIf you're using `MPD::Client` and would like to have your application added to this list, just submit a PR!\n\n- [cryMPD](https://github.com/mamantoha/cryMPD) - control MPD audio playing in the browser\n\n## Contributing\n\n1. Fork it (<https://github.com/mamantoha/crystal_mpd/fork>)\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [mamantoha](https://github.com/mamantoha) Anton Maminov - creator, maintainer\n\n## License\n\nCopyright: 2018-2025 Anton Maminov (<anton.maminov@gmail.com>)\n\nThis library is distributed under the MIT license. Please see the LICENSE file.\n","program":{"html_id":"crystal_mpd/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"crystal_mpd","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"crystal_mpd/MPD","path":"MPD.html","kind":"module","full_name":"MPD","name":"MPD","abstract":false,"locations":[{"filename":"src/crystal_mpd.cr","line_number":11,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd.cr#L11"},{"filename":"src/crystal_mpd/client.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1"},{"filename":"src/crystal_mpd/command_builder.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_builder.cr#L1"},{"filename":"src/crystal_mpd/command_list.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L1"},{"filename":"src/crystal_mpd/error.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/error.cr#L1"},{"filename":"src/crystal_mpd/filter.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L1"},{"filename":"src/crystal_mpd/tag.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L1"},{"filename":"src/crystal_mpd/version.cr","line_number":1,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/version.cr#L1"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(\"mpd\")"},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /home/runner/work/crystal_mpd/crystal_mpd/src/crystal_mpd`).chomp.stringify }}"}],"types":[{"html_id":"crystal_mpd/MPD/Client","path":"MPD/Client.html","kind":"class","full_name":"MPD::Client","name":"Client","abstract":false,"superclass":{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":21,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L21"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ERROR_PREFIX","name":"ERROR_PREFIX","value":"\"ACK \""},{"id":"HELLO_PREFIX","name":"HELLO_PREFIX","value":"\"OK MPD \""},{"id":"NEXT","name":"NEXT","value":"\"list_OK\\n\""},{"id":"SUCCESS","name":"SUCCESS","value":"\"OK\\n\""}],"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"},"doc":"An MPD Client.\n\n### One-shot usage\n\n```\nrequire \"crystal_mpd\"\n\nmpd = MPD::Client.new(\"localhost\", 6600)\nputs mpd.version\nputs mpd.status\nputs mpd.stats\nmpd.disconnect\n```","summary":"<p>An MPD Client.</p>","constructors":[{"html_id":"new(host:String=\"localhost\",port:Int32=6600,*,with_callbacks:Bool=false,password:String|Nil=nil)-class-method","name":"new","doc":"Creates a new MPD client. Parses the `host`, `port`.\n\nThis constructor will raise an exception if could not connect to MPD","summary":"<p>Creates a new MPD client.</p>","abstract":false,"args":[{"name":"host","default_value":"\"localhost\"","external_name":"host","restriction":"String"},{"name":"port","default_value":"6600","external_name":"port","restriction":"Int32"},{"name":"","external_name":"","restriction":""},{"name":"with_callbacks","default_value":"false","external_name":"with_callbacks","restriction":"::Bool"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"}],"args_string":"(host : String = \"localhost\", port : Int32 = 6600, *, with_callbacks : Bool = false, password : String | Nil = nil)","args_html":"(host : String = <span class=\"s\">&quot;localhost&quot;</span>, port : Int32 = <span class=\"n\">6600</span>, *, with_callbacks : Bool = <span class=\"n\">false</span>, password : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":62,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L62"},"def":{"name":"new","args":[{"name":"host","default_value":"\"localhost\"","external_name":"host","restriction":"String"},{"name":"port","default_value":"6600","external_name":"port","restriction":"Int32"},{"name":"","external_name":"","restriction":""},{"name":"with_callbacks","default_value":"false","external_name":"with_callbacks","restriction":"::Bool"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"}],"splat_index":2,"visibility":"Public","body":"_ = allocate\n_.initialize(host, port, with_callbacks: with_callbacks, password: password)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"add(uri:String,position:Int32|String|Nil=nil)-instance-method","name":"add","doc":"Adds the file `uri` to the playlist (directories add recursively).\n\n`uri` can also be a single file.\n\nThe `position` parameter is the same as in `addid`.","summary":"<p>Adds the file <code>uri</code> to the playlist (directories add recursively).</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(uri : String, position : Int32 | String | Nil = nil)","args_html":"(uri : String, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1147,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1147"},"def":{"name":"add","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"add\", uri, position)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"addid(uri:String,position:Int32|String|Nil=nil)-instance-method","name":"addid","doc":"Adds a song to the playlist (non-recursive) and returns the song id.\n`uri` is always a single file or URL.\n\nIf the `position` is given, then the song is inserted at the specified position.\nIf the parameter is string and starts with \"+\" or \"-\", then it is relative to the current song;\ne.g. \"+0\" inserts right after the current song\nand \"-0\" inserts right before the current song (i.e. zero songs between the current song and the newly added song).","summary":"<p>Adds a song to the playlist (non-recursive) and returns the song id.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(uri : String, position : Int32 | String | Nil = nil)","args_html":"(uri : String, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1161,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1161"},"def":{"name":"addid","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"addid\", uri, position)\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"albumart(uri:String)-instance-method","name":"albumart","doc":"Locate album art for the given song","summary":"<p>Locate album art for the given song</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"}],"args_string":"(uri : String)","args_html":"(uri : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1003,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1003"},"def":{"name":"albumart","args":[{"name":"uri","external_name":"uri","restriction":"String"}],"visibility":"Public","body":"fetch_binary(IO::Memory.new, 0, \"albumart\", uri)"},"external_var":false},{"html_id":"callbacks_timeout:Time::Span-instance-method","name":"callbacks_timeout","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L57"},"def":{"name":"callbacks_timeout","return_type":"Time::Span","visibility":"Public","body":"@callbacks_timeout"},"external_var":false},{"html_id":"callbacks_timeout=(callbacks_timeout:Time::Span)-instance-method","name":"callbacks_timeout=","abstract":false,"args":[{"name":"callbacks_timeout","external_name":"callbacks_timeout","restriction":"Time::Span"}],"args_string":"(callbacks_timeout : Time::Span)","args_html":"(callbacks_timeout : Time::Span)","location":{"filename":"src/crystal_mpd/client.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L57"},"def":{"name":"callbacks_timeout=","args":[{"name":"callbacks_timeout","external_name":"callbacks_timeout","restriction":"Time::Span"}],"visibility":"Public","body":"@callbacks_timeout = callbacks_timeout"},"external_var":false},{"html_id":"channels-instance-method","name":"channels","doc":"Obtain a list of all channels.","summary":"<p>Obtain a list of all channels.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":380,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L380"},"def":{"name":"channels","visibility":"Public","body":"synchronize do\n  write_command(\"channels\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"clear-instance-method","name":"clear","doc":"Clears the current playlist.","summary":"<p>Clears the current playlist.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1135,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1135"},"def":{"name":"clear","visibility":"Public","body":"synchronize do\n  write_command(\"clear\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"close-instance-method","name":"close","doc":"Closes the connection to MPD.","summary":"<p>Closes the connection to MPD.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":274,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L274"},"def":{"name":"close","visibility":"Public","body":"synchronize do\n  write_command(\"close\")\nend"},"external_var":false},{"html_id":"command_list_end-instance-method","name":"command_list_end","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":236,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L236"},"def":{"name":"command_list_end","visibility":"Public","body":"write_command(\"command_list_end\")\n\nprocess_command_list\n@command_list.reset\nread_line\n"},"external_var":false},{"html_id":"command_list_ok_begin-instance-method","name":"command_list_ok_begin","doc":"https://mpd.readthedocs.io/en/latest/protocol.html#command-lists","summary":"<p>https://mpd.readthedocs.io/en/latest/protocol.html#command-lists</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":230,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L230"},"def":{"name":"command_list_ok_begin","visibility":"Public","body":"write_command(\"command_list_ok_begin\")\n\n@command_list.begin\n"},"external_var":false},{"html_id":"commands-instance-method","name":"commands","doc":"Shows which commands the current user has access to.","summary":"<p>Shows which commands the current user has access to.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":346,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L346"},"def":{"name":"commands","visibility":"Public","body":"synchronize do\n  write_command(\"commands\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"config-instance-method","name":"config","doc":"Dumps configuration values that may be interesting for the client.\n\nThis command is only permitted to `local` clients (connected via UNIX domain socket).\n\nThe following response attributes are available:\n\n* `music_directory`: The absolute path of the music directory.","summary":"<p>Dumps configuration values that may be interesting for the client.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":338,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L338"},"def":{"name":"config","visibility":"Public","body":"synchronize do\n  write_command(\"config\")\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"connect-instance-method","name":"connect","doc":"Connect to the MPD daemon unless conected.\n\nConnect using the `#reconnect` method.","summary":"<p>Connect to the MPD daemon unless conected.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":84,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L84"},"def":{"name":"connect","visibility":"Public","body":"if connected?\nelse\n  reconnect\nend"},"external_var":false},{"html_id":"connected?-instance-method","name":"connected?","doc":"Check if the client is connected.","summary":"<p>Check if the client is connected.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":186,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L186"},"def":{"name":"connected?","visibility":"Public","body":"@socket.is_a?(Socket)"},"external_var":false},{"html_id":"consume(state:Bool|String)-instance-method","name":"consume","doc":"Sets consume state to `state`, `state` should be `false`, `true` or `\"oneshot\"`.\n\nWhen consume is activated, each song played is removed from playlist.","summary":"<p>Sets consume state to <code>state</code>, <code>state</code> should be <code>false</code>, <code>true</code> or <code>&quot;oneshot&quot;</code>.</p>","abstract":false,"args":[{"name":"state","external_name":"state","restriction":"Bool | String"}],"args_string":"(state : Bool | String)","args_html":"(state : Bool | String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1103,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1103"},"def":{"name":"consume","args":[{"name":"state","external_name":"state","restriction":"Bool | String"}],"visibility":"Public","body":"synchronize do\n  mpd_state = state.is_a?(String) ? state : boolean(state)\n\n  write_command(\"consume\", mpd_state)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"count(filter:String|MPD::Filter,*,group:String|Nil=nil)-instance-method","name":"count","doc":"Count the number of songs and their total playtime in the database matching `filter`.\n\n```\nmpd.count(\"(genre == 'Rock')\")\n=> {\"songs\" => \"11\", \"playtime\" => \"2496\"}\n```\n\nThe `group` keyword may be used to group the results by a tag.\nThe first following example prints per-artist counts\nwhile the next prints the number of songs whose title matches \"Echoes\" grouped by artist:\n\n```\nmpd.count(\"(genre != 'Pop')\", group: \"artist\")\n=> [{\"Artist\" => \"Artist 1\", \"songs\" => \"11\", \"playtime\" => \"2388\"}, {\"Artist\" => \"Artist 2\", \"songs\" => \"12\", \"playtime\" => \"2762\"}]\n```","summary":"<p>Count the number of songs and their total playtime in the database matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"args_string":"(filter : String | MPD::Filter, *, group : String | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, group : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1027,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1027"},"def":{"name":"count","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  group.try do |_group|\n    hash[\"group\"] = _group\n  end\n\n  write_command(\"count\", filter, hash)\n\n  execute(\"fetch_counts\")\nend"},"external_var":false},{"html_id":"count(*,group:String|Nil=nil,&:MPD::Filter->)-instance-method","name":"count","doc":"Count the number of songs and their total playtime in the database matching `filter`.\n\n```\nmpd.count(\"(genre == 'Rock')\")\n=> {\"songs\" => \"11\", \"playtime\" => \"2496\"}\n```\n\nThe `group` keyword may be used to group the results by a tag.\nThe first following example prints per-artist counts\nwhile the next prints the number of songs whose title matches \"Echoes\" grouped by artist:\n\n```\nmpd.count(\"(genre != 'Pop')\", group: \"artist\")\n=> [{\"Artist\" => \"Artist 1\", \"songs\" => \"11\", \"playtime\" => \"2388\"}, {\"Artist\" => \"Artist 2\", \"songs\" => \"12\", \"playtime\" => \"2762\"}]\n```","summary":"<p>Count the number of songs and their total playtime in the database matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"args_string":"(*, group : String | Nil = nil, & : MPD::Filter -> )","args_html":"(*, group : String | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":1040,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1040"},"def":{"name":"count","args":[{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\ncount(filter, group: group)\n"},"external_var":false},{"html_id":"crop-instance-method","name":"crop","doc":"Delete all playlist entries except the one currently playing","summary":"<p>Delete all playlist entries except the one currently playing</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":617,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L617"},"def":{"name":"crop","visibility":"Public","body":"curren_song = currentsong\n\nif curren_song\nelse\n  return\nend\n\nif songs = playlistinfo\n  with_command_list do\n    songs.each do |song|\n      if song[\"file\"] == curren_song[\"file\"]\n        next\n      end\n\n      deleteid(song[\"Id\"].to_i)\n    end\n  end\nend\n"},"external_var":false},{"html_id":"currentsong-instance-method","name":"currentsong","doc":"Displays the song info of the current song (same song that is identified in `#status`).","summary":"<p>Displays the song info of the current song (same song that is identified in <code><a href=\"../MPD/Client.html#status-instance-method\">#status</a></code>).</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":444,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L444"},"def":{"name":"currentsong","visibility":"Public","body":"synchronize do\n  write_command(\"currentsong\")\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"decoders-instance-method","name":"decoders","doc":"Print a list of decoder plugins, followed by their supported suffixes and MIME types.","summary":"<p>Print a list of decoder plugins, followed by their supported suffixes and MIME types.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":417,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L417"},"def":{"name":"decoders","visibility":"Public","body":"synchronize do\n  write_command(\"decoders\")\n  execute(\"fetch_plugins\")\nend"},"external_var":false},{"html_id":"delete(songpos:Int32|MPD::Range)-instance-method","name":"delete","doc":"Deletes a song from the playlist.","summary":"<p>Deletes a song from the playlist.</p>","abstract":false,"args":[{"name":"songpos","external_name":"songpos","restriction":"Int32 | MPD::Range"}],"args_string":"(songpos : Int32 | MPD::Range)","args_html":"(songpos : Int32 | <a href=\"../MPD/Range.html\">MPD::Range</a>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":601,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L601"},"def":{"name":"delete","args":[{"name":"songpos","external_name":"songpos","restriction":"Int32 | MPD::Range"}],"visibility":"Public","body":"synchronize do\n  write_command(\"delete\", songpos)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"deleteid(songid:Int32)-instance-method","name":"deleteid","doc":"Deletes the song `singid` from the playlist.","summary":"<p>Deletes the song <code>singid</code> from the playlist.</p>","abstract":false,"args":[{"name":"songid","external_name":"songid","restriction":"Int32"}],"args_string":"(songid : Int32)","args_html":"(songid : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":609,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L609"},"def":{"name":"deleteid","args":[{"name":"songid","external_name":"songid","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"deleteid\", songid)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"disconnect-instance-method","name":"disconnect","doc":"Disconnect from the MPD daemon.","summary":"<p>Disconnect from the MPD daemon.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":105,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L105"},"def":{"name":"disconnect","visibility":"Public","body":"@socket.try(&.close)\nreset\n"},"external_var":false},{"html_id":"find(filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"find","doc":"Search the database for songs matching `filter`.\n\n`sort` sorts the result by the specified tag.\nThe sort is descending if the tag is prefixed with a minus (`-`).\nWithout `sort`, the order is undefined.\nOnly the first tag value will be used, if multiple of the same type exist.\nTo sort by \"Artist\", \"Album\" or \"AlbumArtist\", you should specify \"ArtistSort\", \"AlbumSort\" or \"AlbumArtistSort\" instead.\nThese will automatically fall back to the former if \"*Sort\" doesn't exist.\n\"AlbumArtist\" falls back to just \"Artist\".\nThe type \"Last-Modified\" can sort by file modification time.\n\n`window` can be used to query only a portion of the real response.\nThe parameter is two zero-based record numbers; a start number and an end number.\n\n```\nmpd.find(\"(genre != 'Pop')\", sort: \"-ArtistSort\", window: (5..10))\nmpd.find(\"(genre starts_with 'Indie')\")\nmpd.find(\"(genre starts_with_ci 'inDIE')\")\nmpd.find(\"(genre contains 'Rock')\")\nmpd.find(\"(genre contains_ci 'RocK')\")\n```","summary":"<p>Search the database for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1189,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1189"},"def":{"name":"find","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"find\", filter, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"find(*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,&:MPD::Filter->)-instance-method","name":"find","doc":"Search the database for songs matching `filter`.\n\n`sort` sorts the result by the specified tag.\nThe sort is descending if the tag is prefixed with a minus (`-`).\nWithout `sort`, the order is undefined.\nOnly the first tag value will be used, if multiple of the same type exist.\nTo sort by \"Artist\", \"Album\" or \"AlbumArtist\", you should specify \"ArtistSort\", \"AlbumSort\" or \"AlbumArtistSort\" instead.\nThese will automatically fall back to the former if \"*Sort\" doesn't exist.\n\"AlbumArtist\" falls back to just \"Artist\".\nThe type \"Last-Modified\" can sort by file modification time.\n\n`window` can be used to query only a portion of the real response.\nThe parameter is two zero-based record numbers; a start number and an end number.\n\n```\nmpd.find(\"(genre != 'Pop')\", sort: \"-ArtistSort\", window: (5..10))\nmpd.find(\"(genre starts_with 'Indie')\")\nmpd.find(\"(genre starts_with_ci 'inDIE')\")\nmpd.find(\"(genre contains 'Rock')\")\nmpd.find(\"(genre contains_ci 'RocK')\")\n```","summary":"<p>Search the database for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(*, sort : String | Nil = nil, window : MPD::Range | Nil = nil, & : MPD::Filter -> )","args_html":"(*, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":1202,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1202"},"def":{"name":"find","args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsort || (sort = filter.sort)\nwindow || (window = filter.window)\nfind(filter.to_s, sort: sort, window: window)\n"},"external_var":false},{"html_id":"findadd(filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,position:Int32|String|Nil=nil)-instance-method","name":"findadd","doc":"Search the database for songs matching `filter` and add them to the queue.\n\nParameters have the same meaning as for `#find` and `#searchadd`.\n\n```\nmpd.findadd(\"(genre == 'Alternative Rock')\")\n```","summary":"<p>Search the database for songs matching <code>filter</code> and add them to the queue.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil, position : Int32 | String | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1245,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1245"},"def":{"name":"findadd","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n  position.try do |_position|\n    hash[\"position\"] = _position\n  end\n\n  write_command(\"findadd\", filter, hash)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"findadd(*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,position:Int32|String|Nil=nil,&:MPD::Filter->)-instance-method","name":"findadd","doc":"Search the database for songs matching `filter` and add them to the queue.\n\nParameters have the same meaning as for `#find` and `#searchadd`.\n\n```\nmpd.findadd(\"(genre == 'Alternative Rock')\")\n```","summary":"<p>Search the database for songs matching <code>filter</code> and add them to the queue.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(*, sort : String | Nil = nil, window : MPD::Range | Nil = nil, position : Int32 | String | Nil = nil, & : MPD::Filter -> )","args_html":"(*, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":1259,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1259"},"def":{"name":"findadd","args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsort || (sort = filter.sort)\nwindow || (window = filter.window)\n\nfindadd(filter.to_s, sort: sort, window: window, position: position)\n"},"external_var":false},{"html_id":"getvol-instance-method","name":"getvol","doc":"Read the volume.\nThe result is a `{\"volume\" => \"100\"}` like in `status`.","summary":"<p>Read the volume.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1080,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1080"},"def":{"name":"getvol","visibility":"Public","body":"synchronize do\n  write_command(\"getvol\")\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"host:String-instance-method","name":"host","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":56,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L56"},"def":{"name":"host","visibility":"Public","body":"@host"},"external_var":false},{"html_id":"idle(subsystems:Array(String)|Nil=nil)-instance-method","name":"idle","doc":"Waits until there is a noteworthy change in one or more of MPD’s subsystems.\n\nAs soon as there is one, it lists all changed systems, where subsystem is one of the following:\n\n* `database` - the song database has been modified after update.\n* `update` - a database update has started or finished. If the database was modified during the update, the database event is also emitted.\n* `stored_playlist` - a stored playlist has been modified, renamed, created or deleted\n* `playlist` - the queue (i.e. the current playlist) has been modified\n* `player` - the player has been started, stopped or seeked or tags of the currently playing song have changed (e.g. received from stream)\n* `mixer` - the volume has changed\n* `output` - an audio output has been added, removed or modified (e.g. renamed, enabled or disabled)\n* `options` - options like repeat, random, crossfade, replay gain\n* `partition` - a partition was added, removed or changed\n* `sticker` - the sticker database has been modified\n* `subscription` - a client has subscribed or unsubscribed to a channel\n* `message` - a message was received on a channel this client is subscribed to; this event is only emitted when the client’s message queue is empty\n* `neighbor` - a neighbor was found or lost\n* `mount` - the mount list has changed\n\nIf the optional `subsystems` argument is used,\nMPD will only send notifications when something changed in one of the specified subsytems.","summary":"<p>Waits until there is a noteworthy change in one or more of MPD’s subsystems.</p>","abstract":false,"args":[{"name":"subsystems","default_value":"nil","external_name":"subsystems","restriction":"Array(String) | ::Nil"}],"args_string":"(subsystems : Array(String) | Nil = nil)","args_html":"(subsystems : Array(String) | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":472,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L472"},"def":{"name":"idle","args":[{"name":"subsystems","default_value":"nil","external_name":"subsystems","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"synchronize do\n  if subsystems\n    write_command(\"idle #{subsystems.join(' ')}\")\n  else\n    write_command(\"idle\")\n  end\n\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"list(type:String,filter:String|MPD::Filter|Nil=nil,*,group:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"list","doc":"Lists unique tags values of the specified `type`.\n\n`type` can be any tag supported by MPD or file.\n`window` works like in `find`. In this command, it affects only the top-most tag type.\n`group` keyword may be used to group the results by tags.\n\n```\nmpd.list(\"Artist\")\n```\n\nAdditional arguments may specify a `filter`.\nThe following example lists all file names by their respective artist and date:\n\n```\nmpd.list(\"Artist\")\nmpd.list(\"filename\", \"((artist == 'Linkin Park') AND (date == '2003'))\")\n```","summary":"<p>Lists unique tags values of the specified <code>type</code>.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"filter","default_value":"nil","external_name":"filter","restriction":"String | MPD::Filter | Nil"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(type : String, filter : String | MPD::Filter | Nil = nil, *, group : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(type : String, filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a> | Nil = <span class=\"n\">nil</span>, *, group : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":983,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L983"},"def":{"name":"list","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"filter","default_value":"nil","external_name":"filter","restriction":"String | MPD::Filter | Nil"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":2,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  group.try do |_group|\n    hash[\"group\"] = _group\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"list\", type, filter, hash)\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"list(type:String,*,group:String|Nil=nil,window:MPD::Range|Nil=nil,&:MPD::Filter->)-instance-method","name":"list","doc":"Lists unique tags values of the specified `type`.\n\n`type` can be any tag supported by MPD or file.\n`window` works like in `find`. In this command, it affects only the top-most tag type.\n`group` keyword may be used to group the results by tags.\n\n```\nmpd.list(\"Artist\")\n```\n\nAdditional arguments may specify a `filter`.\nThe following example lists all file names by their respective artist and date:\n\n```\nmpd.list(\"Artist\")\nmpd.list(\"filename\", \"((artist == 'Linkin Park') AND (date == '2003'))\")\n```","summary":"<p>Lists unique tags values of the specified <code>type</code>.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(type : String, *, group : String | Nil = nil, window : MPD::Range | Nil = nil, & : MPD::Filter -> )","args_html":"(type : String, *, group : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":996,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L996"},"def":{"name":"list","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":1,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nlist(type, filter.to_s, group: group, window: window)\n"},"external_var":false},{"html_id":"listall(uri:String|Nil=nil)-instance-method","name":"listall","doc":"Lists all songs and directories in `uri`.","summary":"<p>Lists all songs and directories in <code>uri</code>.</p>","abstract":false,"args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil = nil)","args_html":"(uri : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1295,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1295"},"def":{"name":"listall","args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"listall\", uri)\n  execute(\"fetch_database\")\nend"},"external_var":false},{"html_id":"listallinfo(uri:String|Nil=nil)-instance-method","name":"listallinfo","doc":"Same as `#listall`, except it also returns metadata info in the same format as `#lsinfo`.","summary":"<p>Same as <code><a href=\"../MPD/Client.html#listall%28uri%3AString%7CNil%3Dnil%29-instance-method\">#listall</a></code>, except it also returns metadata info in the same format as <code><a href=\"../MPD/Client.html#lsinfo%28uri%3AString%7CNil%3Dnil%29-instance-method\">#lsinfo</a></code>.</p>","abstract":false,"args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil = nil)","args_html":"(uri : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1317,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1317"},"def":{"name":"listallinfo","args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"listallinfo\", uri)\n  execute(\"fetch_database\")\nend"},"external_var":false},{"html_id":"listfiles(uri:String|Nil=nil)-instance-method","name":"listfiles","doc":"Lists the contents of the directory `URI`, including files are not recognized by `MPD`.\n\n`uri` can be a path relative to the music directory or an `uri` understood by one of the storage plugins.\nThe response contains at least one line for each directory entry with the prefix `file: ` or  `directory: `,\nand may be followed by file attributes such as `Last-Modified` and `size`.\n\nFor example, `smb://SERVER` returns a list of all shares on the given SMB/CIFS server;\n`nfs://servername/path` obtains a directory listing from the NFS server.","summary":"<p>Lists the contents of the directory <code>URI</code>, including files are not recognized by <code><a href=\"../MPD.html\">MPD</a></code>.</p>","abstract":false,"args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil = nil)","args_html":"(uri : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1332,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1332"},"def":{"name":"listfiles","args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"listfiles\", uri)\n  execute(\"fetch_database\")\nend"},"external_var":false},{"html_id":"listplaylist(name:String,range:MPD::Range|Nil=nil)-instance-method","name":"listplaylist","doc":"Lists the songs in the playlist `name`.\n\nPlaylist plugins are supported.\nA `range` may be specified to list only a part of the playlist","summary":"<p>Lists the songs in the playlist <code>name</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"range","default_value":"nil","external_name":"range","restriction":"MPD::Range | ::Nil"}],"args_string":"(name : String, range : MPD::Range | Nil = nil)","args_html":"(name : String, range : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":787,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L787"},"def":{"name":"listplaylist","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"range","default_value":"nil","external_name":"range","restriction":"MPD::Range | ::Nil"}],"visibility":"Public","body":"synchronize do\n  if range\n    write_command(\"listplaylist\", name, MPD.parse_range(range))\n  else\n    write_command(\"listplaylist\", name)\n  end\n\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"listplaylistinfo(name:String,range:MPD::Range|Nil=nil)-instance-method","name":"listplaylistinfo","doc":"Lists the songs with metadata in the playlist.\n\nPlaylist plugins are supported.\nA `range` may be specified to list only a part of the playlist.","summary":"<p>Lists the songs with metadata in the playlist.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"range","default_value":"nil","external_name":"range","restriction":"MPD::Range | ::Nil"}],"args_string":"(name : String, range : MPD::Range | Nil = nil)","args_html":"(name : String, range : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":803,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L803"},"def":{"name":"listplaylistinfo","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"range","default_value":"nil","external_name":"range","restriction":"MPD::Range | ::Nil"}],"visibility":"Public","body":"synchronize do\n  if range\n    write_command(\"listplaylistinfo\", name, MPD.parse_range(range))\n  else\n    write_command(\"listplaylistinfo\", name)\n  end\n\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"listplaylists-instance-method","name":"listplaylists","doc":"Prints a list of the playlist directory.\n\nAfter each playlist name the server sends its last modification time\nas attribute `Last-Modified` in ISO 8601 format.\nTo avoid problems due to clock differences between clients and the server,\nclients should not compare this value with their local clock.","summary":"<p>Prints a list of the playlist directory.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":509,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L509"},"def":{"name":"listplaylists","visibility":"Public","body":"synchronize do\n  write_command(\"listplaylists\")\n  execute(\"fetch_playlists\")\nend"},"external_var":false},{"html_id":"load(name:String,songpos:Int32|MPD::Range|Nil=nil,position:Int32|String|Nil=nil)-instance-method","name":"load","doc":"Loads the playlist `name` into the current queue.\n\nPlaylist plugins are supported.\nA range `songpos` may be specified to load only a part of the playlist.\n\nThe `position` parameter specifies where the songs will be inserted into the queue;\nit can be relative as described in `addid`.\n(This requires specifying the range as well;\nthe special value 0: can be used if the whole playlist shall be loaded at a certain queue position.)","summary":"<p>Loads the playlist <code>name</code> into the current queue.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"songpos","default_value":"nil","external_name":"songpos","restriction":"Int32 | MPD::Range | Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(name : String, songpos : Int32 | MPD::Range | Nil = nil, position : Int32 | String | Nil = nil)","args_html":"(name : String, songpos : Int32 | <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":662,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L662"},"def":{"name":"load","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"songpos","default_value":"nil","external_name":"songpos","restriction":"Int32 | MPD::Range | Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"load\", name, songpos, position)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"lsinfo(uri:String|Nil=nil)-instance-method","name":"lsinfo","doc":"Lists the contents of the directory `uri`.\n\nWhen listing the root directory, this currently returns the list of stored playlists.\nThis behavior is deprecated; use `#listplaylists` instead.\n\nClients that are connected via UNIX domain socket may use this command\nto read the tags of an arbitrary local file (`uri` beginning with `file:///`).","summary":"<p>Lists the contents of the directory <code>uri</code>.</p>","abstract":false,"args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil = nil)","args_html":"(uri : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1309,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1309"},"def":{"name":"lsinfo","args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"lsinfo\", uri)\n  execute(\"fetch_database\")\nend"},"external_var":false},{"html_id":"move(from:Int32|MPD::Range,to:Int32)-instance-method","name":"move","doc":"Moves the song at `from` or range of songs at `from` to `to` in the playlist.","summary":"<p>Moves the song at <code>from</code> or range of songs at <code>from</code> to <code>to</code> in the playlist.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Int32 | MPD::Range"},{"name":"to","external_name":"to","restriction":"Int32"}],"args_string":"(from : Int32 | MPD::Range, to : Int32)","args_html":"(from : Int32 | <a href=\"../MPD/Range.html\">MPD::Range</a>, to : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":634,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L634"},"def":{"name":"move","args":[{"name":"from","external_name":"from","restriction":"Int32 | MPD::Range"},{"name":"to","external_name":"to","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"move\", from, to)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"moveid(from:Int32,to:Int32|String)-instance-method","name":"moveid","doc":"Moves the song with `from` (songid) to `to` (playlist index) in the playlist.\n\nIf `to` starts with \"+\" or \"-\", then it is relative to the current song;\ne.g. \"+0\" moves to right after the current song\nand \"-0\" moves to right before the current song (i.e. zero songs between the current song and the moved song).","summary":"<p>Moves the song with <code>from</code> (songid) to <code>to</code> (playlist index) in the playlist.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Int32"},{"name":"to","external_name":"to","restriction":"Int32 | String"}],"args_string":"(from : Int32, to : Int32 | String)","args_html":"(from : Int32, to : Int32 | String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":646,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L646"},"def":{"name":"moveid","args":[{"name":"from","external_name":"from","restriction":"Int32"},{"name":"to","external_name":"to","restriction":"Int32 | String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"moveid\", from, to)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"next-instance-method","name":"next","doc":"Plays next song in the playlist.","summary":"<p>Plays next song in the playlist.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":943,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L943"},"def":{"name":"next","visibility":"Public","body":"synchronize do\n  write_command(\"next\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"nextsong:Object|Nil-instance-method","name":"nextsong","doc":"Show the currently queued (next) song.","summary":"<p>Show the currently queued (next) song.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":485,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L485"},"def":{"name":"nextsong","return_type":"Object | ::Nil","visibility":"Public","body":"if _status = status\n  if nextsongid = _status[\"nextsongid\"]?\n    if songs = playlistid(nextsongid.to_i)\n      songs.first\n    end\n  end\nend"},"external_var":false},{"html_id":"notcommands-instance-method","name":"notcommands","doc":"Shows which commands the current user does not have access to.","summary":"<p>Shows which commands the current user does not have access to.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":354,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L354"},"def":{"name":"notcommands","visibility":"Public","body":"synchronize do\n  write_command(\"notcommands\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"on(event:Event,&block:String->_)-instance-method","name":"on","doc":"Register a callback for a specific event (e.g., :state, :song, etc.)\n\n```\nmpd.on :state do |state|\n  puts \"State was change to #{state}\"\nend\n```","summary":"<p>Register a callback for a specific event (e.g., :state, :song, etc.)</p>","abstract":false,"args":[{"name":"event","external_name":"event","restriction":"Event"}],"args_string":"(event : Event, &block : String -> _)","args_html":"(event : <a href=\"../MPD/Client/Event.html\">Event</a>, &block : String -> _)","location":{"filename":"src/crystal_mpd/client.cr","line_number":125,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L125"},"def":{"name":"on","args":[{"name":"event","external_name":"event","restriction":"Event"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(String -> _)"},"visibility":"Public","body":"((__temp_144 = event\n@callbacks[__temp_144]? || (@callbacks[__temp_144] = [] of Proc(String, Nil)))).push(block)"},"external_var":false},{"html_id":"on_callback(&block:Event,String->_)-instance-method","name":"on_callback","doc":"Register a global callback for *any* event. Useful for unified event handling.","summary":"<p>Register a global callback for <em>any</em> event.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":130,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L130"},"def":{"name":"on_callback","yields":2,"block_arity":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Event, String -> _)"},"visibility":"Public","body":"@on_any_callbacks << block"},"external_var":false},{"html_id":"outputs-instance-method","name":"outputs","doc":"Shows information about all outputs.","summary":"<p>Shows information about all outputs.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":425,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L425"},"def":{"name":"outputs","visibility":"Public","body":"synchronize do\n  write_command(\"outputs\")\n  execute(\"fetch_outputs\")\nend"},"external_var":false},{"html_id":"pause(state:Bool|Nil=nil)-instance-method","name":"pause","doc":"Pause or resume playback.\nPass `state` `true` to pause playback or `false` to resume playback.\nWithout the parameter, the pause state is toggled.","summary":"<p>Pause or resume playback.</p>","abstract":false,"args":[{"name":"state","default_value":"nil","external_name":"state","restriction":"Bool | ::Nil"}],"args_string":"(state : Bool | Nil = nil)","args_html":"(state : Bool | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":896,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L896"},"def":{"name":"pause","args":[{"name":"state","default_value":"nil","external_name":"state","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"synchronize do\n  if state\n    write_command(\"pause\", boolean(state))\n  else\n    write_command(\"pause\")\n  end\n\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"play(songpos:Int32|Nil=nil)-instance-method","name":"play","doc":"Begins playing the playlist at song number `songpos`.","summary":"<p>Begins playing the playlist at song number <code>songpos</code>.</p>","abstract":false,"args":[{"name":"songpos","default_value":"nil","external_name":"songpos","restriction":"Int32 | ::Nil"}],"args_string":"(songpos : Int32 | Nil = nil)","args_html":"(songpos : Int32 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":886,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L886"},"def":{"name":"play","args":[{"name":"songpos","default_value":"nil","external_name":"songpos","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"play\", songpos)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"playid(songnid:Int32|Nil=nil)-instance-method","name":"playid","doc":"Begins playing the playlist at song `songid`.","summary":"<p>Begins playing the playlist at song <code>songid</code>.</p>","abstract":false,"args":[{"name":"songnid","default_value":"nil","external_name":"songnid","restriction":"Int32 | ::Nil"}],"args_string":"(songnid : Int32 | Nil = nil)","args_html":"(songnid : Int32 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":959,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L959"},"def":{"name":"playid","args":[{"name":"songnid","default_value":"nil","external_name":"songnid","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playid\", songnid)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"playlistadd(name:String,uri:String,position:Int32|String|Nil=nil)-instance-method","name":"playlistadd","doc":"Adds `uri` to the playlist `name`.m3u.\n\n`name`.m3u will be created if it does not exist.\n\nThe `position` parameter specifies where the songs will be inserted into the playlist.","summary":"<p>Adds <code>uri</code> to the playlist <code>name</code>.m3u.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(name : String, uri : String, position : Int32 | String | Nil = nil)","args_html":"(name : String, uri : String, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":840,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L840"},"def":{"name":"playlistadd","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistadd\", name, uri, position)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"playlistclear(name:String)-instance-method","name":"playlistclear","doc":"Clears the playlist `name`.m3u.","summary":"<p>Clears the playlist <code>name</code>.m3u.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":691,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L691"},"def":{"name":"playlistclear","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistclear\", name)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"playlistdelete(name:String,songpos:Int32|MPD::Range)-instance-method","name":"playlistdelete","doc":"Deletes `songpos` from the playlist `name`.m3u.\n\nThe `songpos` parameter can be a range.","summary":"<p>Deletes <code>songpos</code> from the playlist <code>name</code>.m3u.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"songpos","external_name":"songpos","restriction":"Int32 | MPD::Range"}],"args_string":"(name : String, songpos : Int32 | MPD::Range)","args_html":"(name : String, songpos : Int32 | <a href=\"../MPD/Range.html\">MPD::Range</a>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":878,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L878"},"def":{"name":"playlistdelete","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"songpos","external_name":"songpos","restriction":"Int32 | MPD::Range"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistdelete\", name, songpos)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"playlistfind(filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"playlistfind","doc":"Search the queue for songs matching `filter`.\n\n`sort` sorts the result by the specified tag.\nThe sort is descending if the tag is prefixed with a minus ('-').\nOnly the first tag value will be used, if multiple of the same type exist.\nTo sort by \"Title\", \"Artist\", \"Album\", \"AlbumArtist\" or \"Composer\",\nyou should specify \"TitleSort\", \"ArtistSort\", \"AlbumSort\", \"AlbumArtistSort\" or \"ComposerSort\" instead.\nThese will automatically fall back to the former if \"*Sort\" doesn’t exist.\n\"AlbumArtist\" falls back to just \"Artist\".\nThe type \"Last-Modified\" can sort by file modification time, and \"prio\" sorts by queue priority.\n\n`window` can be used to query only a portion of the real response.","summary":"<p>Search the queue for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":579,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L579"},"def":{"name":"playlistfind","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"playlistfind\", filter, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"playlistfind(*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,&:MPD::Filter->)-instance-method","name":"playlistfind","doc":":ditto","summary":"<p>:ditto</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(*, sort : String | Nil = nil, window : MPD::Range | Nil = nil, & : MPD::Filter -> )","args_html":"(*, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":592,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L592"},"def":{"name":"playlistfind","args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsort || (sort = filter.sort)\nwindow || (window = filter.window)\nplaylistfind(filter.to_s, sort: sort, window: window)\n"},"external_var":false},{"html_id":"playlistid(songid:Int32|Nil=nil)-instance-method","name":"playlistid","doc":"Displays a list of songs in the playlist.\n\n`songid` is optional and specifies a single song to display info for.","summary":"<p>Displays a list of songs in the playlist.</p>","abstract":false,"args":[{"name":"songid","default_value":"nil","external_name":"songid","restriction":"Int32 | ::Nil"}],"args_string":"(songid : Int32 | Nil = nil)","args_html":"(songid : Int32 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":725,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L725"},"def":{"name":"playlistid","args":[{"name":"songid","default_value":"nil","external_name":"songid","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistid\", songid)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"playlistinfo(songpos:Int32|MPD::Range|Nil=nil)-instance-method","name":"playlistinfo","doc":"Displays a list of all songs in the playlist,\n\nor if the optional argument is given, displays information only for\nthe song `songpos` or the range of songs `START:END`.\n\nRange is done in by using `MPD::Range`.\n\nShow info about the first three songs in the playlist:\n\n```\nmpd.playlistinfo\nmpd.playlistinfo(1..3)\nmpd.playlistinfo(..3)\nmpd.playlistinfo(10..)\n```\n\nWith negative range end MPD will assumes the biggest possible number then\n\n```\nmpd.playlistinfo(10..-1)\n```","summary":"<p>Displays a list of all songs in the playlist,</p>","abstract":false,"args":[{"name":"songpos","default_value":"nil","external_name":"songpos","restriction":"Int32 | MPD::Range | Nil"}],"args_string":"(songpos : Int32 | MPD::Range | Nil = nil)","args_html":"(songpos : Int32 | <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":537,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L537"},"def":{"name":"playlistinfo","args":[{"name":"songpos","default_value":"nil","external_name":"songpos","restriction":"Int32 | MPD::Range | Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistinfo\", songpos)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"playlistlength(name:String)-instance-method","name":"playlistlength","doc":"Count the number of songs and their total playtime (seconds) in the playlist.","summary":"<p>Count the number of songs and their total playtime (seconds) in the playlist.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":699,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L699"},"def":{"name":"playlistlength","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistlength\", name)\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"playlistmove(name:String,from:Int32|MPD::Range,to:Int32)-instance-method","name":"playlistmove","doc":"Moves the song at position `from` in the playlist `name`.m3u to the position `to`.","summary":"<p>Moves the song at position <code>from</code> in the playlist <code>name</code>.m3u to the position <code>to</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"from","external_name":"from","restriction":"Int32 | MPD::Range"},{"name":"to","external_name":"to","restriction":"Int32"}],"args_string":"(name : String, from : Int32 | MPD::Range, to : Int32)","args_html":"(name : String, from : Int32 | <a href=\"../MPD/Range.html\">MPD::Range</a>, to : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":848,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L848"},"def":{"name":"playlistmove","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"from","external_name":"from","restriction":"Int32 | MPD::Range"},{"name":"to","external_name":"to","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"playlistmove\", name, from, to)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"playlistsearch(filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"playlistsearch","doc":"Search the queue for songs matching `filter`.\nParameters have the same meaning as for `find`, except that search is not case sensitive.","summary":"<p>Search the queue for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":546,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L546"},"def":{"name":"playlistsearch","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"playlistsearch\", filter, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"playlistsearch(*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,&:MPD::Filter->)-instance-method","name":"playlistsearch","doc":"Search the queue for songs matching `filter`.\nParameters have the same meaning as for `find`, except that search is not case sensitive.","summary":"<p>Search the queue for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(*, sort : String | Nil = nil, window : MPD::Range | Nil = nil, & : MPD::Filter -> )","args_html":"(*, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":559,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L559"},"def":{"name":"playlistsearch","args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsort || (sort = filter.sort)\nwindow || (window = filter.window)\nplaylistsearch(filter.to_s, sort: sort, window: window)\n"},"external_var":false},{"html_id":"port:Int32-instance-method","name":"port","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":56,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L56"},"def":{"name":"port","visibility":"Public","body":"@port"},"external_var":false},{"html_id":"previous-instance-method","name":"previous","doc":"Plays previous song in the playlist.","summary":"<p>Plays previous song in the playlist.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":951,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L951"},"def":{"name":"previous","visibility":"Public","body":"synchronize do\n  write_command(\"previous\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"prio(priority:Int32,range:MPD::Range)-instance-method","name":"prio","doc":"Set the priority of the specified songs.\n\nA higher priority means that it will be played first when “random” mode is enabled.\n\nA `priority` is an integer between 0 and 255. The default priority of new songs is 0.","summary":"<p>Set the priority of the specified songs.</p>","abstract":false,"args":[{"name":"priority","external_name":"priority","restriction":"Int32"},{"name":"range","external_name":"range","restriction":"MPD::Range"}],"args_string":"(priority : Int32, range : MPD::Range)","args_html":"(priority : Int32, range : <a href=\"../MPD/Range.html\">MPD::Range</a>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":860,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L860"},"def":{"name":"prio","args":[{"name":"priority","external_name":"priority","restriction":"Int32"},{"name":"range","external_name":"range","restriction":"MPD::Range"}],"visibility":"Public","body":"synchronize do\n  write_command(\"prio\", priority, MPD.parse_range(range))\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"prioid(priority:Int32,songid:Int32)-instance-method","name":"prioid","doc":"Same as `prio`, but address the songs with their id.","summary":"<p>Same as <code><a href=\"../MPD/Client.html#prio%28priority%3AInt32%2Crange%3AMPD%3A%3ARange%29-instance-method\">#prio</a></code>, but address the songs with their id.</p>","abstract":false,"args":[{"name":"priority","external_name":"priority","restriction":"Int32"},{"name":"songid","external_name":"songid","restriction":"Int32"}],"args_string":"(priority : Int32, songid : Int32)","args_html":"(priority : Int32, songid : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":868,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L868"},"def":{"name":"prioid","args":[{"name":"priority","external_name":"priority","restriction":"Int32"},{"name":"songid","external_name":"songid","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"prioid\", priority, songid)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"protocol-instance-method","name":"protocol","doc":"Shows a list of enabled protocol features.\n\nAvailable features:\n\n\"hide_playlists_in_root\": disables the listing of stored playlists for the `lsinfo`.","summary":"<p>Shows a list of enabled protocol features.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1387,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1387"},"def":{"name":"protocol","visibility":"Public","body":"synchronize do\n  write_command(\"protocol\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"protocol_all-instance-method","name":"protocol_all","doc":"Enables all protocol features.","summary":"<p>Enables all protocol features.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1427,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1427"},"def":{"name":"protocol_all","visibility":"Public","body":"synchronize do\n  write_command(\"protocol all\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"protocol_available-instance-method","name":"protocol_available","doc":"Lists all available protocol features.","summary":"<p>Lists all available protocol features.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1395,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1395"},"def":{"name":"protocol_available","visibility":"Public","body":"synchronize do\n  write_command(\"protocol available\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"protocol_clear-instance-method","name":"protocol_clear","doc":"Disables all protocol features.","summary":"<p>Disables all protocol features.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1419,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1419"},"def":{"name":"protocol_clear","visibility":"Public","body":"synchronize do\n  write_command(\"protocol clear\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"protocol_disable(feature:String)-instance-method","name":"protocol_disable","doc":"Disables a `feature`.","summary":"<p>Disables a <code>feature</code>.</p>","abstract":false,"args":[{"name":"feature","external_name":"feature","restriction":"String"}],"args_string":"(feature : String)","args_html":"(feature : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1411,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1411"},"def":{"name":"protocol_disable","args":[{"name":"feature","external_name":"feature","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"protocol disable #{feature}\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"protocol_enable(feature:String)-instance-method","name":"protocol_enable","doc":"Enables a `feature`.","summary":"<p>Enables a <code>feature</code>.</p>","abstract":false,"args":[{"name":"feature","external_name":"feature","restriction":"String"}],"args_string":"(feature : String)","args_html":"(feature : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1403,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1403"},"def":{"name":"protocol_enable","args":[{"name":"feature","external_name":"feature","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"protocol enable #{feature}\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"random(state:Bool)-instance-method","name":"random","doc":"Sets random state to `state`, `state` should be `false` or `true`.","summary":"<p>Sets random state to <code>state</code>, <code>state</code> should be <code>false</code> or <code>true</code>.</p>","abstract":false,"args":[{"name":"state","external_name":"state","restriction":"Bool"}],"args_string":"(state : Bool)","args_html":"(state : Bool)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1047,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1047"},"def":{"name":"random","args":[{"name":"state","external_name":"state","restriction":"Bool"}],"visibility":"Public","body":"synchronize do\n  write_command(\"random\", boolean(state))\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"readmessages-instance-method","name":"readmessages","doc":"Reads messages for this client. The response is a list of `channel:` and `message:` lines.","summary":"<p>Reads messages for this client.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1367,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1367"},"def":{"name":"readmessages","visibility":"Public","body":"synchronize do\n  write_command(\"readmessages\")\n  execute(\"fetch_messages\")\nend"},"external_var":false},{"html_id":"readpicture(uri:String)-instance-method","name":"readpicture","doc":"Locate a picture for the given song","summary":"<p>Locate a picture for the given song</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"}],"args_string":"(uri : String)","args_html":"(uri : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1008,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1008"},"def":{"name":"readpicture","args":[{"name":"uri","external_name":"uri","restriction":"String"}],"visibility":"Public","body":"fetch_binary(IO::Memory.new, 0, \"readpicture\", uri)"},"external_var":false},{"html_id":"reconnect-instance-method","name":"reconnect","doc":"Attempts to reconnect to the MPD daemon.","summary":"<p>Attempts to reconnect to the MPD daemon.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":89,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L89"},"def":{"name":"reconnect","visibility":"Public","body":"@socket = if host.starts_with?('/')\n  UNIXSocket.new(host)\nelse\n  TCPSocket.new(host, port)\nend\n\n@supported_commands = nil\n\nhello\npassword\nif @with_callbacks\n  callback_thread\nend\n"},"external_var":false},{"html_id":"rename(name:String,new_name:String)-instance-method","name":"rename","doc":"Renames the playlist `name`.m3u to `new_name`.m3u.","summary":"<p>Renames the playlist <code>name</code>.m3u to <code>new_name</code>.m3u.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"new_name","external_name":"new_name","restriction":"String"}],"args_string":"(name : String, new_name : String)","args_html":"(name : String, new_name : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":715,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L715"},"def":{"name":"rename","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"new_name","external_name":"new_name","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"rename\", name, new_name)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"repeat(state:Bool)-instance-method","name":"repeat","doc":"Sets repeat state to `state`, `state` should be `false` or `true`.","summary":"<p>Sets repeat state to <code>state</code>, <code>state</code> should be <code>false</code> or <code>true</code>.</p>","abstract":false,"args":[{"name":"state","external_name":"state","restriction":"Bool"}],"args_string":"(state : Bool)","args_html":"(state : Bool)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1055,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1055"},"def":{"name":"repeat","args":[{"name":"state","external_name":"state","restriction":"Bool"}],"visibility":"Public","body":"synchronize do\n  write_command(\"repeat\", boolean(state))\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"replay_gain_mode(mode:String)-instance-method","name":"replay_gain_mode","doc":"Sets the replay gain mode.\n\nOne of `off`, `track`, `album`, `auto`.\nChanging the mode during playback may take several seconds, because the new settings does not affect the buffered data.\nThis command triggers the options idle event.","summary":"<p>Sets the replay gain mode.</p>","abstract":false,"args":[{"name":"mode","external_name":"mode","restriction":"String"}],"args_string":"(mode : String)","args_html":"(mode : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1117,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1117"},"def":{"name":"replay_gain_mode","args":[{"name":"mode","external_name":"mode","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"replay_gain_mode\", mode)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"replay_gain_status-instance-method","name":"replay_gain_status","doc":"Prints replay gain options.\n\nCurrently, only the variable `replay_gain_mode` is returned.","summary":"<p>Prints replay gain options.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1127,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1127"},"def":{"name":"replay_gain_status","visibility":"Public","body":"synchronize do\n  write_command(\"replay_gain_status\")\n  execute(\"fetch_item\")\nend"},"external_var":false},{"html_id":"rescan(uri:String|Nil=nil)-instance-method","name":"rescan","doc":"Same as `#update`, but also rescans unmodified files.","summary":"<p>Same as <code><a href=\"../MPD/Client.html#update%28uri%3AString%7CNil%3Dnil%29-instance-method\">#update</a></code>, but also rescans unmodified files.</p>","abstract":false,"args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil = nil)","args_html":"(uri : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":496,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L496"},"def":{"name":"rescan","args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"rescan\", uri)\n  execute(\"fetch_item\")\nend"},"external_var":false},{"html_id":"rm(name:String)-instance-method","name":"rm","doc":"Removes the playlist `name`.m3u from the playlist directory.","summary":"<p>Removes the playlist <code>name</code>.m3u from the playlist directory.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":707,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L707"},"def":{"name":"rm","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"rm\", name)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"save(name:String,mode:String|Nil=nil)-instance-method","name":"save","doc":"Saves the current playlist to `name`.m3u in the playlist directory.\n\n`mode` is optional argument. One of \"create\", \"append\", or \"replace\".\n\n- \"create\": The default. Create a new playlist. Fail if a playlist with name `name` already exists.\n- \"append\", \"replace\": Append or replace an existing playlist. Fail if a playlist with name `name` doesn't already exist.","summary":"<p>Saves the current playlist to <code>name</code>.m3u in the playlist directory.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"String | ::Nil"}],"args_string":"(name : String, mode : String | Nil = nil)","args_html":"(name : String, mode : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":683,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L683"},"def":{"name":"save","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"mode","default_value":"nil","external_name":"mode","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"save\", name, mode)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"search(filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"search","doc":"Search the database for songs matching `filter`.\n\nParameters have the same meaning as for `#find`, except that search is not case sensitive.\n\n```\nmpd.search(\"(any =~ 'crystal')\")\n```","summary":"<p>Search the database for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1217,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1217"},"def":{"name":"search","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"search\", filter, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"search(*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,&:MPD::Filter->)-instance-method","name":"search","doc":"Search the database for songs matching `filter`.\n\nParameters have the same meaning as for `#find`, except that search is not case sensitive.\n\n```\nmpd.search(\"(any =~ 'crystal')\")\n```","summary":"<p>Search the database for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(*, sort : String | Nil = nil, window : MPD::Range | Nil = nil, & : MPD::Filter -> )","args_html":"(*, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":1230,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1230"},"def":{"name":"search","args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsort || (sort = filter.sort)\nwindow || (window = filter.window)\nsearch(filter.to_s, sort: sort, window: window)\n"},"external_var":false},{"html_id":"searchadd(filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,position:Int32|String|Nil=nil)-instance-method","name":"searchadd","doc":"Search the database for songs matching `filter` and add them to the queue.\n\nParameters have the same meaning as for `#search`.\n\nThe `position` parameter specifies where the songs will be inserted.\nIt can be relative to the current song as in `#addid`.","summary":"<p>Search the database for songs matching <code>filter</code> and add them to the queue.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil, position : Int32 | String | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1274,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1274"},"def":{"name":"searchadd","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n  position.try do |_position|\n    hash[\"position\"] = _position\n  end\n\n  write_command(\"searchadd\", filter, hash)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"searchadd(*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,position:Int32|String|Nil=nil,&:MPD::Filter->)-instance-method","name":"searchadd","doc":"Search the database for songs matching `filter` and add them to the queue.\n\nParameters have the same meaning as for `#search`.\n\nThe `position` parameter specifies where the songs will be inserted.\nIt can be relative to the current song as in `#addid`.","summary":"<p>Search the database for songs matching <code>filter</code> and add them to the queue.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(*, sort : String | Nil = nil, window : MPD::Range | Nil = nil, position : Int32 | String | Nil = nil, & : MPD::Filter -> )","args_html":"(*, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":1288,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1288"},"def":{"name":"searchadd","args":[{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsearchadd(filter.to_s, sort: sort, window: window, position: position)\n"},"external_var":false},{"html_id":"searchaddpl(name:String,filter:String|MPD::Filter,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,position:Int32|String|Nil=nil)-instance-method","name":"searchaddpl","doc":"Search the database for songs matching `filter` and add them to the queue.\n\nIf a playlist by that `name` doesn't exist it is created.\n\nParameters have the same meaning as for `search`.\n\nThe `position` parameter specifies where the songs will be inserted.\nIt can be relative to the current song as in `addid`.","summary":"<p>Search the database for songs matching <code>filter</code> and add them to the queue.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(name : String, filter : String | MPD::Filter, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil, position : Int32 | String | Nil = nil)","args_html":"(name : String, filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":740,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L740"},"def":{"name":"searchaddpl","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"splat_index":2,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n  position.try do |_position|\n    hash[\"position\"] = _position\n  end\n\n  write_command(\"searchaddpl\", name, filter, hash)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"searchaddpl(name:String,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil,position:Int32|String|Nil=nil,&:MPD::Filter->)-instance-method","name":"searchaddpl","doc":"Search the database for songs matching `filter` and add them to the queue.\n\nIf a playlist by that `name` doesn't exist it is created.\n\nParameters have the same meaning as for `search`.\n\nThe `position` parameter specifies where the songs will be inserted.\nIt can be relative to the current song as in `addid`.","summary":"<p>Search the database for songs matching <code>filter</code> and add them to the queue.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"args_string":"(name : String, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil, position : Int32 | String | Nil = nil, & : MPD::Filter -> )","args_html":"(name : String, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, position : Int32 | String | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":754,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L754"},"def":{"name":"searchaddpl","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"},{"name":"position","default_value":"nil","external_name":"position","restriction":"Int32 | String | Nil"}],"splat_index":1,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsort || (sort = filter.sort)\nwindow || (window = filter.window)\nsearchaddpl(name, filter.to_s, sort: sort, window: window, position: position)\n"},"external_var":false},{"html_id":"searchcount(filter:String|MPD::Filter,*,group:String|Nil=nil)-instance-method","name":"searchcount","doc":"Count the number of songs and their total playtime in the database matching `filter`.\nParameters have the same meaning as for `count` except the search is not case sensitive.","summary":"<p>Count the number of songs and their total playtime in the database matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"args_string":"(filter : String | MPD::Filter, *, group : String | Nil = nil)","args_html":"(filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, group : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":764,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L764"},"def":{"name":"searchcount","args":[{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"splat_index":1,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  group.try do |_group|\n    hash[\"group\"] = _group\n  end\n\n  write_command(\"searchcount\", filter, hash)\n\n  execute(\"fetch_counts\")\nend"},"external_var":false},{"html_id":"searchcount(*,group:String|Nil=nil,&:MPD::Filter->)-instance-method","name":"searchcount","doc":"Count the number of songs and their total playtime in the database matching `filter`.\nParameters have the same meaning as for `count` except the search is not case sensitive.","summary":"<p>Count the number of songs and their total playtime in the database matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"args_string":"(*, group : String | Nil = nil, & : MPD::Filter -> )","args_html":"(*, group : String | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":777,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L777"},"def":{"name":"searchcount","args":[{"name":"","external_name":"","restriction":""},{"name":"group","default_value":"nil","external_name":"group","restriction":"String | ::Nil"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsearchcount(filter.to_s, group: group)\n"},"external_var":false},{"html_id":"searchplaylist(name:String,filter:String|MPD::Filter,*,window:MPD::Range|Nil=nil)-instance-method","name":"searchplaylist","doc":"Search the playlist for songs matching `filter`.\nA range may be specified to list only a part of the playlist.","summary":"<p>Search the playlist for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(name : String, filter : String | MPD::Filter, *, window : MPD::Range | Nil = nil)","args_html":"(name : String, filter : String | <a href=\"../MPD/Filter.html\">MPD::Filter</a>, *, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":817,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L817"},"def":{"name":"searchplaylist","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"filter","external_name":"filter","restriction":"String | MPD::Filter"},{"name":"","external_name":"","restriction":""},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":2,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"searchplaylist\", name, filter, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"searchplaylist(name:String,*,window:MPD::Range|Nil=nil,&:MPD::Filter->)-instance-method","name":"searchplaylist","doc":"Search the playlist for songs matching `filter`.\nA range may be specified to list only a part of the playlist.","summary":"<p>Search the playlist for songs matching <code>filter</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(name : String, *, window : MPD::Range | Nil = nil, & : MPD::Filter -> )","args_html":"(name : String, *, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>, & : <a href=\"../MPD/Filter.html\">MPD::Filter</a> -> )","location":{"filename":"src/crystal_mpd/client.cr","line_number":829,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L829"},"def":{"name":"searchplaylist","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":1,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(MPD::Filter ->)"},"visibility":"Public","body":"filter = MPD::Filter.new\nyield filter\nsearchplaylist(name, filter, window: window)\n"},"external_var":false},{"html_id":"seek(songid:Int32,time:Int32)-instance-method","name":"seek","doc":"Seeks to the position `time` (in seconds) of entry `songpos` in the playlist.","summary":"<p>Seeks to the position <code>time</code> (in seconds) of entry <code>songpos</code> in the playlist.</p>","abstract":false,"args":[{"name":"songid","external_name":"songid","restriction":"Int32"},{"name":"time","external_name":"time","restriction":"Int32"}],"args_string":"(songid : Int32, time : Int32)","args_html":"(songid : Int32, time : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":935,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L935"},"def":{"name":"seek","args":[{"name":"songid","external_name":"songid","restriction":"Int32"},{"name":"time","external_name":"time","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"seek\", songid, time)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"seekcur(time:String|Int32)-instance-method","name":"seekcur","doc":"Seeks to the position `time` within the current song.\n\nIf prefixed by `+` or `-`, then the time is relative to the current playing position.","summary":"<p>Seeks to the position <code>time</code> within the current song.</p>","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"String | Int32"}],"args_string":"(time : String | Int32)","args_html":"(time : String | Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":919,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L919"},"def":{"name":"seekcur","args":[{"name":"time","external_name":"time","restriction":"String | Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"seekcur\", time)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"seekid(songid:Int32,time:String|Int32)-instance-method","name":"seekid","doc":"Seeks to the position `time` (in seconds) of song `songid`.","summary":"<p>Seeks to the position <code>time</code> (in seconds) of song <code>songid</code>.</p>","abstract":false,"args":[{"name":"songid","external_name":"songid","restriction":"Int32"},{"name":"time","external_name":"time","restriction":"String | Int32"}],"args_string":"(songid : Int32, time : String | Int32)","args_html":"(songid : Int32, time : String | Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":927,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L927"},"def":{"name":"seekid","args":[{"name":"songid","external_name":"songid","restriction":"Int32"},{"name":"time","external_name":"time","restriction":"String | Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"seekid\", songid, time)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"sendmessage(channel:String,message:String)-instance-method","name":"sendmessage","doc":"Send a `message` to the specified `channel`.","summary":"<p>Send a <code>message</code> to the specified <code>channel</code>.</p>","abstract":false,"args":[{"name":"channel","external_name":"channel","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(channel : String, message : String)","args_html":"(channel : String, message : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1359,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1359"},"def":{"name":"sendmessage","args":[{"name":"channel","external_name":"channel","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"sendmessage\", channel, message)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"setvol(vol:Int)-instance-method","name":"setvol","doc":"Sets volume to `vol`, the range of volume is 0-100.","summary":"<p>Sets volume to <code>vol</code>, the range of volume is 0-100.</p>","abstract":false,"args":[{"name":"vol","external_name":"vol","restriction":"Int"}],"args_string":"(vol : Int)","args_html":"(vol : Int)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1071,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1071"},"def":{"name":"setvol","args":[{"name":"vol","external_name":"vol","restriction":"Int"}],"visibility":"Public","body":"synchronize do\n  write_command(\"setvol\", vol)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"shuffle(range:MPD::Range|Nil=nil)-instance-method","name":"shuffle","doc":"Shuffles the current playlist. `range` is optional and specifies a range of songs.","summary":"<p>Shuffles the current playlist.</p>","abstract":false,"args":[{"name":"range","default_value":"nil","external_name":"range","restriction":"MPD::Range | Nil"}],"args_string":"(range : MPD::Range | Nil = nil)","args_html":"(range : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":670,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L670"},"def":{"name":"shuffle","args":[{"name":"range","default_value":"nil","external_name":"range","restriction":"MPD::Range | Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"shuffle\", range)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"single(state:Bool|String)-instance-method","name":"single","doc":"Sets single state to `state`, `state` should be `false`, `true` or `\"oneshot\"`.\n\nWhen single is activated, playback is stopped after current song,\nor song is repeated if the `repeat` mode is enabled.","summary":"<p>Sets single state to <code>state</code>, <code>state</code> should be <code>false</code>, <code>true</code> or <code>&quot;oneshot&quot;</code>.</p>","abstract":false,"args":[{"name":"state","external_name":"state","restriction":"Bool | String"}],"args_string":"(state : Bool | String)","args_html":"(state : Bool | String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1091,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1091"},"def":{"name":"single","args":[{"name":"state","external_name":"state","restriction":"Bool | String"}],"visibility":"Public","body":"synchronize do\n  mpd_state = state.is_a?(String) ? state : boolean(state)\n\n  write_command(\"single\", mpd_state)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"stats-instance-method","name":"stats","doc":"Displays statistics.\n\nResponse:\n* `artists`: number of artists\n* `songs`: number of albums\n* `uptime`: daemon uptime in seconds\n* `db_playtime`: sum of all song times in the db\n* `db_update`: last db update in UNIX time\n* `playtime`: time length of music played","summary":"<p>Displays statistics.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":324,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L324"},"def":{"name":"stats","visibility":"Public","body":"synchronize do\n  write_command(\"stats\")\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"status-instance-method","name":"status","doc":"Reports the current status of the player and the volume level.\n\nResponse:\n* `partition`: the name of the current partition\n* `volume`: 0-100\n* `repeat`: 0 or 1\n* `random`: 0 or 1\n* `single`: 0 or 1\n* `consume`: 0 or 1\n* `playlist`: 31-bit unsigned integer, the playlist version number\n* `playlistlength`: integer, the length of the playlist\n* `state`: play, stop, or pause\n* `song`: playlist song number of the current song stopped on or playing\n* `songid`: playlist songid of the current song stopped on or playing\n* `nextsong`: playlist song number of the next song to be played\n* `nextsongid`: playlist songid of the next song to be played\n* `time`: total time elapsed (of current playing/paused song)\n* `elapsed`: Total time elapsed within the current song, but with higher resolution\n* `duration`: Duration of the current song in seconds\n* `bitrate`: instantaneous bitrate in kbps\n* `xfade`: crossfade in seconds\n* `mixrampdb`: mixramp threshold in dB\n* `mixrampdelay`: mixrampdelay in seconds\n* `audio`: sampleRate:bits:channels\n* `samplerate:bits:channels`\n* `updating_db`: job id\n* `error`: if there is an error, returns message here\n* `lastloadedplaylist`: last loaded stored playlist","summary":"<p>Reports the current status of the player and the volume level.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":308,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L308"},"def":{"name":"status","visibility":"Public","body":"synchronize do\n  write_command(\"status\")\n  execute(\"fetch_object\")\nend"},"external_var":false},{"html_id":"sticker_dec(type:String,uri:String,name:String,value:Int32)-instance-method","name":"sticker_dec","doc":"Adds a sticker value to the specified object.\nIf a sticker item with that name already exists, it is decremented by supplied value.","summary":"<p>Adds a sticker value to the specified object.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(type : String, uri : String, name : String, value : Int32)","args_html":"(type : String, uri : String, name : String, value : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1464,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1464"},"def":{"name":"sticker_dec","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"sticker dec\", type, uri, name, value)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"sticker_delete(type:String,uri:String,name:String|Nil=nil)-instance-method","name":"sticker_delete","doc":"Deletes a sticker value from the specified object.\n\nIf you do not specify a sticker name, all sticker values are deleted.","summary":"<p>Deletes a sticker value from the specified object.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(type : String, uri : String, name : String | Nil = nil)","args_html":"(type : String, uri : String, name : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1474,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1474"},"def":{"name":"sticker_delete","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"sticker delete\", type, uri, name)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"sticker_find(type:String,uri:String,name:String,value:String,operator:String=\"=\",*,sort:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"sticker_find","doc":"Searches for stickers with the given value.\n\nOther supported operators are: \"<\", \">\", \"contains\", \"starts_with\" for strings\nand \"eq\", \"lt\", \"gt\" to cast the value to an integer.","summary":"<p>Searches for stickers with the given value.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"},{"name":"operator","default_value":"\"=\"","external_name":"operator","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(type : String, uri : String, name : String, value : String, operator : String = \"=\", *, sort : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(type : String, uri : String, name : String, value : String, operator : String = <span class=\"s\">&quot;=&quot;</span>, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1519,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1519"},"def":{"name":"sticker_find","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"},{"name":"operator","default_value":"\"=\"","external_name":"operator","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":5,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"sticker find\", type, uri, name, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"sticker_find(type:String,uri:String,name:String,*,sort:String|Nil=nil,window:MPD::Range|Nil=nil)-instance-method","name":"sticker_find","doc":"Searches the sticker database for stickers with the specified `name`, below the specified directory (`uri`).\nFor each matching song, it prints the URI and that one sticker’s value.\n\n`sort` sorts the result by \"uri\", \"value\" or \"value_int\" (casts the sticker value to an integer).\n\nReturns:\n\n```\nclient.sticker_find(\"song\", \"path/to/folder\", \"name1\")\n# => [{\"file\" => \"path/to/folder/file1.ogg\", \"sticker\" => \"name1=value1\"}, ...]\n```","summary":"<p>Searches the sticker database for stickers with the specified <code>name</code>, below the specified directory (<code>uri</code>).</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"args_string":"(type : String, uri : String, name : String, *, sort : String | Nil = nil, window : MPD::Range | Nil = nil)","args_html":"(type : String, uri : String, name : String, *, sort : String | Nil = <span class=\"n\">nil</span>, window : <a href=\"../MPD/Range.html\">MPD::Range</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1502,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1502"},"def":{"name":"sticker_find","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":"String | ::Nil"},{"name":"window","default_value":"nil","external_name":"window","restriction":"MPD::Range | ::Nil"}],"splat_index":3,"visibility":"Public","body":"synchronize do\n  hash = {} of String => String | MPD::Range\n\n  sort.try do |_sort|\n    hash[\"sort\"] = _sort\n  end\n  window.try do |_window|\n    hash[\"window\"] = _window\n  end\n\n  write_command(\"sticker find\", type, uri, name, hash)\n  execute(\"fetch_songs\")\nend"},"external_var":false},{"html_id":"sticker_get(type:String,uri:String,name:String):String|Nil-instance-method","name":"sticker_get","doc":"Reads a sticker value for the specified object.","summary":"<p>Reads a sticker value for the specified object.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(type : String, uri : String, name : String) : String | Nil","args_html":"(type : String, uri : String, name : String) : String | Nil","location":{"filename":"src/crystal_mpd/client.cr","line_number":1435,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1435"},"def":{"name":"sticker_get","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"}],"return_type":"String | ::Nil","visibility":"Public","body":"synchronize do\n  write_command(\"sticker get\", type, uri, name)\n  item = execute(\"fetch_item\")\n\n  (item.split(\"=\", 2))[1]\nend"},"external_var":false},{"html_id":"sticker_inc(type:String,uri:String,name:String,value:Int32)-instance-method","name":"sticker_inc","doc":"Adds a sticker value to the specified object.\nIf a sticker item with that name already exists, it is incremented by supplied value.","summary":"<p>Adds a sticker value to the specified object.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(type : String, uri : String, name : String, value : Int32)","args_html":"(type : String, uri : String, name : String, value : Int32)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1455,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1455"},"def":{"name":"sticker_inc","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"synchronize do\n  write_command(\"sticker inc\", type, uri, name, value)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"sticker_list(type:String,uri:String):Hash(String,String)|Nil-instance-method","name":"sticker_list","doc":"Lists the stickers for the specified object.","summary":"<p>Lists the stickers for the specified object.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"}],"args_string":"(type : String, uri : String) : Hash(String, String) | Nil","args_html":"(type : String, uri : String) : Hash(String, String) | Nil","location":{"filename":"src/crystal_mpd/client.cr","line_number":1482,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1482"},"def":{"name":"sticker_list","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"}],"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"synchronize do\n  write_command(\"sticker list\", type, uri)\n  list = execute(\"fetch_sticker_list\")\n\n  list.map(&.[](\"sticker\")).map(&.split(\"=\", 2)).to_h\nend"},"external_var":false},{"html_id":"sticker_set(type:String,uri:String,name:String,value:String)-instance-method","name":"sticker_set","doc":"Adds a sticker value to the specified object.\nIf a sticker item with that name already exists, it is replaced.","summary":"<p>Adds a sticker value to the specified object.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(type : String, uri : String, name : String, value : String)","args_html":"(type : String, uri : String, name : String, value : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1446,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1446"},"def":{"name":"sticker_set","args":[{"name":"type","external_name":"type","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"sticker set\", type, uri, name, value)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"stickernames-instance-method","name":"stickernames","doc":"Gets a list of uniq sticker names.","summary":"<p>Gets a list of uniq sticker names.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1533,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1533"},"def":{"name":"stickernames","visibility":"Public","body":"synchronize do\n  write_command(\"stickernames\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"stickernamestypes(type:String)-instance-method","name":"stickernamestypes","doc":"Gets a list of uniq sticker names and their types.","summary":"<p>Gets a list of uniq sticker names and their types.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"}],"args_string":"(type : String)","args_html":"(type : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1549,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1549"},"def":{"name":"stickernamestypes","args":[{"name":"type","external_name":"type","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"stickernamestypes\", type)\n  execute(\"fetch_stickernamestypes\")\nend"},"external_var":false},{"html_id":"stickertypes-instance-method","name":"stickertypes","doc":"Shows a list of available sticker types.","summary":"<p>Shows a list of available sticker types.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1541,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1541"},"def":{"name":"stickertypes","visibility":"Public","body":"synchronize do\n  write_command(\"stickertypes\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"stop-instance-method","name":"stop","doc":"Stops playing.","summary":"<p>Stops playing.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":909,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L909"},"def":{"name":"stop","visibility":"Public","body":"synchronize do\n  write_command(\"stop\")\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"subscribe(name:String)-instance-method","name":"subscribe","doc":"Subscribe to a channel `name`.\n\nThe channel is created if it does not exist already.\nThe `name` may consist of alphanumeric ASCII characters plus underscore, dash, dot and colon.","summary":"<p>Subscribe to a channel <code>name</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1343,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1343"},"def":{"name":"subscribe","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"subscribe\", name)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"supports?(command:String|Symbol):Bool-instance-method","name":"supports?","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String | Symbol"}],"args_string":"(command : String | Symbol) : Bool","args_html":"(command : String | Symbol) : Bool","location":{"filename":"src/crystal_mpd/client.cr","line_number":114,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L114"},"def":{"name":"supports?","args":[{"name":"command","external_name":"command","restriction":"String | Symbol"}],"return_type":"Bool","visibility":"Public","body":"supported_commands.includes?(command.to_s)"},"external_var":false},{"html_id":"tagtypes-instance-method","name":"tagtypes","doc":"Shows a list of available tag types.","summary":"<p>Shows a list of available tag types.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":1375,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1375"},"def":{"name":"tagtypes","visibility":"Public","body":"synchronize do\n  write_command(\"tagtypes\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"unsubscribe(name:String)-instance-method","name":"unsubscribe","doc":"Unsubscribe from a channel `name`.","summary":"<p>Unsubscribe from a channel <code>name</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1351,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1351"},"def":{"name":"unsubscribe","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"synchronize do\n  write_command(\"unsubscribe\", name)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"update(uri:String|Nil=nil)-instance-method","name":"update","doc":"Updates the music database: find new files, remove deleted files, update modified files.\n\n`uri` is a particular directory or song/file to update.\nIf you do not specify it, everything is updated.","summary":"<p>Updates the music database: find new files, remove deleted files, update modified files.</p>","abstract":false,"args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"args_string":"(uri : String | Nil = nil)","args_html":"(uri : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/crystal_mpd/client.cr","line_number":436,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L436"},"def":{"name":"update","args":[{"name":"uri","default_value":"nil","external_name":"uri","restriction":"String | ::Nil"}],"visibility":"Public","body":"synchronize do\n  write_command(\"update\", uri)\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"urlhandlers-instance-method","name":"urlhandlers","doc":"Gets a list of available URL handlers.","summary":"<p>Gets a list of available URL handlers.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":409,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L409"},"def":{"name":"urlhandlers","visibility":"Public","body":"synchronize do\n  write_command(\"urlhandlers\")\n  execute(\"fetch_list\")\nend"},"external_var":false},{"html_id":"version:String?-instance-method","name":"version","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":56,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L56"},"def":{"name":"version","visibility":"Public","body":"@version"},"external_var":false},{"html_id":"volume(change:Int)-instance-method","name":"volume","doc":"Changes volume by amount `change`.","summary":"<p>Changes volume by amount <code>change</code>.</p>","abstract":false,"args":[{"name":"change","external_name":"change","restriction":"Int"}],"args_string":"(change : Int)","args_html":"(change : Int)","location":{"filename":"src/crystal_mpd/client.cr","line_number":1063,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L1063"},"def":{"name":"volume","args":[{"name":"change","external_name":"change","restriction":"Int"}],"visibility":"Public","body":"synchronize do\n  write_command(\"volume\", change)\n  execute(\"fetch_nothing\")\nend"},"external_var":false},{"html_id":"with_command_list(&)-instance-method","name":"with_command_list","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":244,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L244"},"def":{"name":"with_command_list","yields":0,"block_arity":0,"visibility":"Public","body":"begin\n  command_list_ok_begin\n\n  yield\nensure\n  command_list_end\nend"},"external_var":false}],"types":[{"html_id":"crystal_mpd/MPD/Client/Event","path":"MPD/Client/Event.html","kind":"enum","full_name":"MPD::Client::Event","name":"Event","abstract":false,"ancestors":[{"html_id":"crystal_mpd/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crystal_mpd/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystal_mpd/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":29,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L29"}],"repository_name":"crystal_mpd","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Partition","name":"Partition","value":"0"},{"id":"Volume","name":"Volume","value":"1"},{"id":"Repeat","name":"Repeat","value":"2"},{"id":"Random","name":"Random","value":"3"},{"id":"Single","name":"Single","value":"4"},{"id":"Consume","name":"Consume","value":"5"},{"id":"Playlist","name":"Playlist","value":"6"},{"id":"Playlistlength","name":"Playlistlength","value":"7"},{"id":"State","name":"State","value":"8"},{"id":"Song","name":"Song","value":"9"},{"id":"Songid","name":"Songid","value":"10"},{"id":"Nextsong","name":"Nextsong","value":"11"},{"id":"Nextsongid","name":"Nextsongid","value":"12"},{"id":"Time","name":"Time","value":"13"},{"id":"Elapsed","name":"Elapsed","value":"14"},{"id":"Duration","name":"Duration","value":"15"},{"id":"Bitrate","name":"Bitrate","value":"16"},{"id":"Xfade","name":"Xfade","value":"17"},{"id":"Mixrampdb","name":"Mixrampdb","value":"18"},{"id":"Mixrampdelay","name":"Mixrampdelay","value":"19"},{"id":"Audio","name":"Audio","value":"20"},{"id":"Updating_db","name":"Updating_db","value":"21"},{"id":"Error","name":"Error","value":"22"},{"id":"Lastloadedplaylist","name":"Lastloadedplaylist","value":"23"}],"namespace":{"html_id":"crystal_mpd/MPD/Client","kind":"class","full_name":"MPD::Client","name":"Client"},"instance_methods":[{"html_id":"audio?-instance-method","name":"audio?","doc":"Returns `true` if this enum value equals `Audio`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Audio\">Audio</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":50,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L50"},"def":{"name":"audio?","visibility":"Public","body":"self == Audio"},"external_var":false},{"html_id":"bitrate?-instance-method","name":"bitrate?","doc":"Returns `true` if this enum value equals `Bitrate`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Bitrate\">Bitrate</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":46,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L46"},"def":{"name":"bitrate?","visibility":"Public","body":"self == Bitrate"},"external_var":false},{"html_id":"consume?-instance-method","name":"consume?","doc":"Returns `true` if this enum value equals `Consume`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Consume\">Consume</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":35,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L35"},"def":{"name":"consume?","visibility":"Public","body":"self == Consume"},"external_var":false},{"html_id":"duration?-instance-method","name":"duration?","doc":"Returns `true` if this enum value equals `Duration`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Duration\">Duration</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":45,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L45"},"def":{"name":"duration?","visibility":"Public","body":"self == Duration"},"external_var":false},{"html_id":"elapsed?-instance-method","name":"elapsed?","doc":"Returns `true` if this enum value equals `Elapsed`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Elapsed\">Elapsed</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":44,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L44"},"def":{"name":"elapsed?","visibility":"Public","body":"self == Elapsed"},"external_var":false},{"html_id":"error?-instance-method","name":"error?","doc":"Returns `true` if this enum value equals `Error`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Error\">Error</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":52,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L52"},"def":{"name":"error?","visibility":"Public","body":"self == Error"},"external_var":false},{"html_id":"lastloadedplaylist?-instance-method","name":"lastloadedplaylist?","doc":"Returns `true` if this enum value equals `Lastloadedplaylist`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Lastloadedplaylist\">Lastloadedplaylist</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":53,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L53"},"def":{"name":"lastloadedplaylist?","visibility":"Public","body":"self == Lastloadedplaylist"},"external_var":false},{"html_id":"mixrampdb?-instance-method","name":"mixrampdb?","doc":"Returns `true` if this enum value equals `Mixrampdb`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Mixrampdb\">Mixrampdb</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":48,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L48"},"def":{"name":"mixrampdb?","visibility":"Public","body":"self == Mixrampdb"},"external_var":false},{"html_id":"mixrampdelay?-instance-method","name":"mixrampdelay?","doc":"Returns `true` if this enum value equals `Mixrampdelay`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Mixrampdelay\">Mixrampdelay</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":49,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L49"},"def":{"name":"mixrampdelay?","visibility":"Public","body":"self == Mixrampdelay"},"external_var":false},{"html_id":"nextsong?-instance-method","name":"nextsong?","doc":"Returns `true` if this enum value equals `Nextsong`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Nextsong\">Nextsong</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":41,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L41"},"def":{"name":"nextsong?","visibility":"Public","body":"self == Nextsong"},"external_var":false},{"html_id":"nextsongid?-instance-method","name":"nextsongid?","doc":"Returns `true` if this enum value equals `Nextsongid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Nextsongid\">Nextsongid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":42,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L42"},"def":{"name":"nextsongid?","visibility":"Public","body":"self == Nextsongid"},"external_var":false},{"html_id":"partition?-instance-method","name":"partition?","doc":"Returns `true` if this enum value equals `Partition`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Partition\">Partition</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":30,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L30"},"def":{"name":"partition?","visibility":"Public","body":"self == Partition"},"external_var":false},{"html_id":"playlist?-instance-method","name":"playlist?","doc":"Returns `true` if this enum value equals `Playlist`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Playlist\">Playlist</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":36,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L36"},"def":{"name":"playlist?","visibility":"Public","body":"self == Playlist"},"external_var":false},{"html_id":"playlistlength?-instance-method","name":"playlistlength?","doc":"Returns `true` if this enum value equals `Playlistlength`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Playlistlength\">Playlistlength</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":37,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L37"},"def":{"name":"playlistlength?","visibility":"Public","body":"self == Playlistlength"},"external_var":false},{"html_id":"random?-instance-method","name":"random?","doc":"Returns `true` if this enum value equals `Random`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Random\">Random</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":33,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L33"},"def":{"name":"random?","visibility":"Public","body":"self == Random"},"external_var":false},{"html_id":"repeat?-instance-method","name":"repeat?","doc":"Returns `true` if this enum value equals `Repeat`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Repeat\">Repeat</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":32,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L32"},"def":{"name":"repeat?","visibility":"Public","body":"self == Repeat"},"external_var":false},{"html_id":"single?-instance-method","name":"single?","doc":"Returns `true` if this enum value equals `Single`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Single\">Single</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":34,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L34"},"def":{"name":"single?","visibility":"Public","body":"self == Single"},"external_var":false},{"html_id":"song?-instance-method","name":"song?","doc":"Returns `true` if this enum value equals `Song`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Song\">Song</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":39,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L39"},"def":{"name":"song?","visibility":"Public","body":"self == Song"},"external_var":false},{"html_id":"songid?-instance-method","name":"songid?","doc":"Returns `true` if this enum value equals `Songid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Songid\">Songid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":40,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L40"},"def":{"name":"songid?","visibility":"Public","body":"self == Songid"},"external_var":false},{"html_id":"state?-instance-method","name":"state?","doc":"Returns `true` if this enum value equals `State`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#State\">State</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":38,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L38"},"def":{"name":"state?","visibility":"Public","body":"self == State"},"external_var":false},{"html_id":"time?-instance-method","name":"time?","doc":"Returns `true` if this enum value equals `Time`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Time\">Time</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":43,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L43"},"def":{"name":"time?","visibility":"Public","body":"self == Time"},"external_var":false},{"html_id":"updating_db?-instance-method","name":"updating_db?","doc":"Returns `true` if this enum value equals `Updating_db`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Updating_db\">Updating_db</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":51,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L51"},"def":{"name":"updating_db?","visibility":"Public","body":"self == Updating_db"},"external_var":false},{"html_id":"volume?-instance-method","name":"volume?","doc":"Returns `true` if this enum value equals `Volume`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Volume\">Volume</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":31,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L31"},"def":{"name":"volume?","visibility":"Public","body":"self == Volume"},"external_var":false},{"html_id":"xfade?-instance-method","name":"xfade?","doc":"Returns `true` if this enum value equals `Xfade`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../MPD/Client/Event.html#Xfade\">Xfade</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/client.cr","line_number":47,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L47"},"def":{"name":"xfade?","visibility":"Public","body":"self == Xfade"},"external_var":false}]}]},{"html_id":"crystal_mpd/MPD/CommandBuilder","path":"MPD/CommandBuilder.html","kind":"class","full_name":"MPD::CommandBuilder","name":"CommandBuilder","abstract":false,"superclass":{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/command_builder.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_builder.cr#L2"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"},"class_methods":[{"html_id":"build(command:String,*args):String-class-method","name":"build","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(command : String, *args) : String","args_html":"(command : String, *args) : String","location":{"filename":"src/crystal_mpd/command_builder.cr","line_number":3,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_builder.cr#L3"},"def":{"name":"build","args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"args","external_name":"args","restriction":""}],"splat_index":1,"return_type":"String","visibility":"Public","body":"parts = [command]\nargs.each do |arg|\n  parts << (parse_arg(arg))\nend\nparts.join(\" \")\n"},"external_var":false},{"html_id":"parse_range(range:MPD::Range):String-class-method","name":"parse_range","doc":"Converts a Crystal Range into an MPD-compatible \"START:END\" string.\n\nMPD treats the range as exclusive, so:\n- Inclusive ranges (e.g., 0..2) must be converted to \"0:3\" to include index 2\n- Exclusive ranges (e.g., 0...2) are used directly as \"0:2\"\n\nExamples:\n  `(0..20)`   -> \"0:21\"\n  `(0...20)`  -> \"0:20\"\n  `(..5)`     -> \"0:6\"\n  `(5..)`     -> \"5:\"","summary":"<p>Converts a Crystal Range into an MPD-compatible &quot;START:END&quot; string.</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"MPD::Range"}],"args_string":"(range : MPD::Range) : String","args_html":"(range : <a href=\"../MPD/Range.html\">MPD::Range</a>) : String","location":{"filename":"src/crystal_mpd/command_builder.cr","line_number":45,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_builder.cr#L45"},"def":{"name":"parse_range","args":[{"name":"range","external_name":"range","restriction":"MPD::Range"}],"return_type":"String","visibility":"Public","body":"start = range.begin || 0\nfinish = range.end\n\nif finish\n  if range.exclusive?\n  else\n    finish = finish + 1\n  end\n  \"#{start}:#{finish}\"\nelse\n  \"#{start}:\"\nend\n"},"external_var":false}]},{"html_id":"crystal_mpd/MPD/CommandList","path":"MPD/CommandList.html","kind":"struct","full_name":"MPD::CommandList","name":"CommandList","abstract":false,"superclass":{"html_id":"crystal_mpd/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystal_mpd/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystal_mpd/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/command_list.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L2"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/crystal_mpd/command_list.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L2"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"active=(active:Bool)-instance-method","name":"active=","abstract":false,"args":[{"name":"active","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool)","args_html":"(active : Bool)","location":{"filename":"src/crystal_mpd/command_list.cr","line_number":4,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L4"},"def":{"name":"active=","args":[{"name":"active","external_name":"active","restriction":"Bool"}],"visibility":"Public","body":"@active = active"},"external_var":false},{"html_id":"active?:Bool-instance-method","name":"active?","abstract":false,"location":{"filename":"src/crystal_mpd/command_list.cr","line_number":4,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L4"},"def":{"name":"active?","return_type":"Bool","visibility":"Public","body":"@active"},"external_var":false},{"html_id":"add(command:String)-instance-method","name":"add","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"}],"args_string":"(command : String)","args_html":"(command : String)","location":{"filename":"src/crystal_mpd/command_list.cr","line_number":6,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L6"},"def":{"name":"add","args":[{"name":"command","external_name":"command","restriction":"String"}],"visibility":"Public","body":"@commands << command"},"external_var":false},{"html_id":"begin-instance-method","name":"begin","abstract":false,"location":{"filename":"src/crystal_mpd/command_list.cr","line_number":10,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L10"},"def":{"name":"begin","visibility":"Public","body":"@active = true"},"external_var":false},{"html_id":"commands:Array(String)-instance-method","name":"commands","abstract":false,"location":{"filename":"src/crystal_mpd/command_list.cr","line_number":3,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L3"},"def":{"name":"commands","visibility":"Public","body":"@commands"},"external_var":false},{"html_id":"commands=(commands:Array(String))-instance-method","name":"commands=","abstract":false,"args":[{"name":"commands","external_name":"commands","restriction":"::Array(::String)"}],"args_string":"(commands : Array(String))","args_html":"(commands : Array(String))","location":{"filename":"src/crystal_mpd/command_list.cr","line_number":3,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L3"},"def":{"name":"commands=","args":[{"name":"commands","external_name":"commands","restriction":"::Array(::String)"}],"visibility":"Public","body":"@commands = commands"},"external_var":false},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/crystal_mpd/command_list.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L2"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false},{"html_id":"reset-instance-method","name":"reset","abstract":false,"location":{"filename":"src/crystal_mpd/command_list.cr","line_number":14,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/command_list.cr#L14"},"def":{"name":"reset","visibility":"Public","body":"@commands.clear\n@active = false\n"},"external_var":false}]},{"html_id":"crystal_mpd/MPD/Error","path":"MPD/Error.html","kind":"class","full_name":"MPD::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystal_mpd/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystal_mpd/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/error.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/error.cr#L2"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"}},{"html_id":"crystal_mpd/MPD/Filter","path":"MPD/Filter.html","kind":"class","full_name":"MPD::Filter","name":"Filter","abstract":false,"superclass":{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystal_mpd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/filter.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L2"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"},"class_methods":[{"html_id":"contains(tag:String,value:String)-class-method","name":"contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.contains(tag, value)"},"external_var":false},{"html_id":"contains(tag:Tag,value:String)-class-method","name":"contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.contains(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"contains_ci(tag:String,value:String)-class-method","name":"contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.contains_ci(tag, value)"},"external_var":false},{"html_id":"contains_ci(tag:Tag,value:String)-class-method","name":"contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.contains_ci(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"contains_cs(tag:String,value:String)-class-method","name":"contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.contains_cs(tag, value)"},"external_var":false},{"html_id":"contains_cs(tag:Tag,value:String)-class-method","name":"contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.contains_cs(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"eq_ci(tag:String,value:String)-class-method","name":"eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.eq_ci(tag, value)"},"external_var":false},{"html_id":"eq_ci(tag:Tag,value:String)-class-method","name":"eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.eq_ci(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"eq_cs(tag:String,value:String)-class-method","name":"eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.eq_cs(tag, value)"},"external_var":false},{"html_id":"eq_cs(tag:Tag,value:String)-class-method","name":"eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.eq_cs(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not(expr:Filter)-class-method","name":"not","abstract":false,"args":[{"name":"expr","external_name":"expr","restriction":"Filter"}],"args_string":"(expr : Filter)","args_html":"(expr : <a href=\"../MPD/Filter.html\">Filter</a>)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":127,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L127"},"def":{"name":"not","args":[{"name":"expr","external_name":"expr","restriction":"Filter"}],"visibility":"Public","body":"new.not(expr)"},"external_var":false},{"html_id":"not_contains(tag:String,value:String)-class-method","name":"not_contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_contains(tag, value)"},"external_var":false},{"html_id":"not_contains(tag:Tag,value:String)-class-method","name":"not_contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_contains(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_contains_ci(tag:String,value:String)-class-method","name":"not_contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_contains_ci(tag, value)"},"external_var":false},{"html_id":"not_contains_ci(tag:Tag,value:String)-class-method","name":"not_contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_contains_ci(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_contains_cs(tag:String,value:String)-class-method","name":"not_contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_contains_cs(tag, value)"},"external_var":false},{"html_id":"not_contains_cs(tag:Tag,value:String)-class-method","name":"not_contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_contains_cs(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_eq_ci(tag:String,value:String)-class-method","name":"not_eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_eq_ci(tag, value)"},"external_var":false},{"html_id":"not_eq_ci(tag:Tag,value:String)-class-method","name":"not_eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_eq_ci(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_eq_cs(tag:String,value:String)-class-method","name":"not_eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_eq_cs(tag, value)"},"external_var":false},{"html_id":"not_eq_cs(tag:Tag,value:String)-class-method","name":"not_eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_eq_cs(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_starts_with(tag:String,value:String)-class-method","name":"not_starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_starts_with(tag, value)"},"external_var":false},{"html_id":"not_starts_with(tag:Tag,value:String)-class-method","name":"not_starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_starts_with(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_starts_with_ci(tag:String,value:String)-class-method","name":"not_starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_starts_with_ci(tag, value)"},"external_var":false},{"html_id":"not_starts_with_ci(tag:Tag,value:String)-class-method","name":"not_starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_starts_with_ci(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_starts_with_cs(tag:String,value:String)-class-method","name":"not_starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_starts_with_cs(tag, value)"},"external_var":false},{"html_id":"not_starts_with_cs(tag:Tag,value:String)-class-method","name":"not_starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.not_starts_with_cs(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"starts_with(tag:String,value:String)-class-method","name":"starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.starts_with(tag, value)"},"external_var":false},{"html_id":"starts_with(tag:Tag,value:String)-class-method","name":"starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.starts_with(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"starts_with_ci(tag:String,value:String)-class-method","name":"starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.starts_with_ci(tag, value)"},"external_var":false},{"html_id":"starts_with_ci(tag:Tag,value:String)-class-method","name":"starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.starts_with_ci(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"starts_with_cs(tag:String,value:String)-class-method","name":"starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.starts_with_cs(tag, value)"},"external_var":false},{"html_id":"starts_with_cs(tag:Tag,value:String)-class-method","name":"starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"new.starts_with_cs(tag.to_s.downcase, value)"},"external_var":false}],"constructors":[{"html_id":"eq(tag:String,value:String):Filter-class-method","name":"eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String) : Filter","args_html":"(tag : String, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"eq","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.eq(tag, value)"},"external_var":false},{"html_id":"eq(tag:Tag,value:String):Filter-class-method","name":"eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String) : Filter","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"eq","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.eq(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"match(tag:String,value:String):Filter-class-method","name":"match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String) : Filter","args_html":"(tag : String, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"match","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.match(tag, value)"},"external_var":false},{"html_id":"match(tag:Tag,value:String):Filter-class-method","name":"match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String) : Filter","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"match","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.match(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/crystal_mpd/filter.cr","line_number":7,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L7"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"not_eq(tag:String,value:String):Filter-class-method","name":"not_eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String) : Filter","args_html":"(tag : String, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_eq","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.not_eq(tag, value)"},"external_var":false},{"html_id":"not_eq(tag:Tag,value:String):Filter-class-method","name":"not_eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String) : Filter","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_eq","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.not_eq(tag.to_s.downcase, value)"},"external_var":false},{"html_id":"not_match(tag:String,value:String):Filter-class-method","name":"not_match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String) : Filter","args_html":"(tag : String, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_match","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.not_match(tag, value)"},"external_var":false},{"html_id":"not_match(tag:Tag,value:String):Filter-class-method","name":"not_match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String) : Filter","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String) : <a href=\"../MPD/Filter.html\">Filter</a>","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_match","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Filter","visibility":"Public","body":"new.not_match(tag.to_s.downcase, value)"},"external_var":false}],"instance_methods":[{"html_id":"contains(tag:String,value:String)-instance-method","name":"contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"contains\", value)"},"external_var":false},{"html_id":"contains(tag:Tag,value:String)-instance-method","name":"contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"contains\", value)"},"external_var":false},{"html_id":"contains_ci(tag:String,value:String)-instance-method","name":"contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"contains_ci\", value)"},"external_var":false},{"html_id":"contains_ci(tag:Tag,value:String)-instance-method","name":"contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"contains_ci\", value)"},"external_var":false},{"html_id":"contains_cs(tag:String,value:String)-instance-method","name":"contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"contains_cs\", value)"},"external_var":false},{"html_id":"contains_cs(tag:Tag,value:String)-instance-method","name":"contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"contains_cs\", value)"},"external_var":false},{"html_id":"eq(tag:String,value:String)-instance-method","name":"eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"eq","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"==\", value)"},"external_var":false},{"html_id":"eq(tag:Tag,value:String)-instance-method","name":"eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"eq","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"==\", value)"},"external_var":false},{"html_id":"eq_ci(tag:String,value:String)-instance-method","name":"eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"eq_ci\", value)"},"external_var":false},{"html_id":"eq_ci(tag:Tag,value:String)-instance-method","name":"eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"eq_ci\", value)"},"external_var":false},{"html_id":"eq_cs(tag:String,value:String)-instance-method","name":"eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"eq_cs\", value)"},"external_var":false},{"html_id":"eq_cs(tag:Tag,value:String)-instance-method","name":"eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"eq_cs\", value)"},"external_var":false},{"html_id":"match(tag:String,value:String)-instance-method","name":"match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"match","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"=~\", value)"},"external_var":false},{"html_id":"match(tag:Tag,value:String)-instance-method","name":"match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"match","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"=~\", value)"},"external_var":false},{"html_id":"not(expr:Filter)-instance-method","name":"not","doc":"Logical NOT for nested filters","summary":"<p>Logical NOT for nested filters</p>","abstract":false,"args":[{"name":"expr","external_name":"expr","restriction":"Filter"}],"args_string":"(expr : Filter)","args_html":"(expr : <a href=\"../MPD/Filter.html\">Filter</a>)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":122,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L122"},"def":{"name":"not","args":[{"name":"expr","external_name":"expr","restriction":"Filter"}],"visibility":"Public","body":"@parts << \"(!#{expr})\"\nself\n"},"external_var":false},{"html_id":"not_contains(tag:String,value:String)-instance-method","name":"not_contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"contains\", value)"},"external_var":false},{"html_id":"not_contains(tag:Tag,value:String)-instance-method","name":"not_contains","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"contains\", value)"},"external_var":false},{"html_id":"not_contains_ci(tag:String,value:String)-instance-method","name":"not_contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"contains_ci\", value)"},"external_var":false},{"html_id":"not_contains_ci(tag:Tag,value:String)-instance-method","name":"not_contains_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"contains_ci\", value)"},"external_var":false},{"html_id":"not_contains_cs(tag:String,value:String)-instance-method","name":"not_contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"contains_cs\", value)"},"external_var":false},{"html_id":"not_contains_cs(tag:Tag,value:String)-instance-method","name":"not_contains_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_contains_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"contains_cs\", value)"},"external_var":false},{"html_id":"not_eq(tag:String,value:String)-instance-method","name":"not_eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_eq","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"!=\", value)"},"external_var":false},{"html_id":"not_eq(tag:Tag,value:String)-instance-method","name":"not_eq","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_eq","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"!=\", value)"},"external_var":false},{"html_id":"not_eq_ci(tag:String,value:String)-instance-method","name":"not_eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"eq_ci\", value)"},"external_var":false},{"html_id":"not_eq_ci(tag:Tag,value:String)-instance-method","name":"not_eq_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"eq_ci\", value)"},"external_var":false},{"html_id":"not_eq_cs(tag:String,value:String)-instance-method","name":"not_eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"eq_cs\", value)"},"external_var":false},{"html_id":"not_eq_cs(tag:Tag,value:String)-instance-method","name":"not_eq_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_eq_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"eq_cs\", value)"},"external_var":false},{"html_id":"not_match(tag:String,value:String)-instance-method","name":"not_match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_match","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"!~\", value)"},"external_var":false},{"html_id":"not_match(tag:Tag,value:String)-instance-method","name":"not_match","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":57,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L57"},"def":{"name":"not_match","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"!~\", value)"},"external_var":false},{"html_id":"not_starts_with(tag:String,value:String)-instance-method","name":"not_starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"starts_with\", value)"},"external_var":false},{"html_id":"not_starts_with(tag:Tag,value:String)-instance-method","name":"not_starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"starts_with\", value)"},"external_var":false},{"html_id":"not_starts_with_ci(tag:String,value:String)-instance-method","name":"not_starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"starts_with_ci\", value)"},"external_var":false},{"html_id":"not_starts_with_ci(tag:Tag,value:String)-instance-method","name":"not_starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"starts_with_ci\", value)"},"external_var":false},{"html_id":"not_starts_with_cs(tag:String,value:String)-instance-method","name":"not_starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag, \"starts_with_cs\", value)"},"external_var":false},{"html_id":"not_starts_with_cs(tag:Tag,value:String)-instance-method","name":"not_starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"not_starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add_neg(tag.to_s.downcase, \"starts_with_cs\", value)"},"external_var":false},{"html_id":"sort(tag:String)-instance-method","name":"sort","doc":"sorts the result by the specified tag","summary":"<p>sorts the result by the specified tag</p>","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"}],"args_string":"(tag : String)","args_html":"(tag : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":12,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L12"},"def":{"name":"sort","args":[{"name":"tag","external_name":"tag","restriction":"String"}],"visibility":"Public","body":"@sort = tag\nself\n"},"external_var":false},{"html_id":"sort(tag:MPD::Tag)-instance-method","name":"sort","doc":"sorts the result by the specified tag","summary":"<p>sorts the result by the specified tag</p>","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"MPD::Tag"}],"args_string":"(tag : MPD::Tag)","args_html":"(tag : <a href=\"../MPD/Tag.html\">MPD::Tag</a>)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":18,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L18"},"def":{"name":"sort","args":[{"name":"tag","external_name":"tag","restriction":"MPD::Tag"}],"visibility":"Public","body":"@sort = tag.to_s.downcase\nself\n"},"external_var":false},{"html_id":"sort:String|Nil-instance-method","name":"sort","abstract":false,"location":{"filename":"src/crystal_mpd/filter.cr","line_number":4,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L4"},"def":{"name":"sort","return_type":"String | ::Nil","visibility":"Public","body":"@sort"},"external_var":false},{"html_id":"starts_with(tag:String,value:String)-instance-method","name":"starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"starts_with\", value)"},"external_var":false},{"html_id":"starts_with(tag:Tag,value:String)-instance-method","name":"starts_with","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"starts_with\", value)"},"external_var":false},{"html_id":"starts_with_ci(tag:String,value:String)-instance-method","name":"starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"starts_with_ci\", value)"},"external_var":false},{"html_id":"starts_with_ci(tag:Tag,value:String)-instance-method","name":"starts_with_ci","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_ci","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"starts_with_ci\", value)"},"external_var":false},{"html_id":"starts_with_cs(tag:String,value:String)-instance-method","name":"starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : String, value : String)","args_html":"(tag : String, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag, \"starts_with_cs\", value)"},"external_var":false},{"html_id":"starts_with_cs(tag:Tag,value:String)-instance-method","name":"starts_with_cs","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(tag : Tag, value : String)","args_html":"(tag : <a href=\"../MPD/Tag.html\">Tag</a>, value : String)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":87,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L87"},"def":{"name":"starts_with_cs","args":[{"name":"tag","external_name":"tag","restriction":"Tag"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"add(tag.to_s.downcase, \"starts_with_cs\", value)"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/crystal_mpd/filter.cr","line_number":142,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L142"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << to_s"},"external_var":false},{"html_id":"to_s:String-instance-method","name":"to_s","doc":"Returns a nicely readable and concise string representation of this object,\ntypically intended for users.\n\nThis method should usually **not** be overridden. It delegates to\n`#to_s(IO)` which can be overridden for custom implementations.\n\nAlso see `#inspect`.","summary":"<p>Returns a nicely readable and concise string representation of this object, typically intended for users.</p>","abstract":false,"location":{"filename":"src/crystal_mpd/filter.cr","line_number":131,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L131"},"def":{"name":"to_s","return_type":"String","visibility":"Public","body":"case @parts.size\nwhen 0\n  \"\"\nwhen 1\n  @parts.first\nelse\n  \"(#{@parts.join(\" AND \")})\"\nend"},"external_var":false},{"html_id":"window(range:MPD::Range)-instance-method","name":"window","doc":"can be used to query only a portion of the real response","summary":"<p>can be used to query only a portion of the real response</p>","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"MPD::Range"}],"args_string":"(range : MPD::Range)","args_html":"(range : <a href=\"../MPD/Range.html\">MPD::Range</a>)","location":{"filename":"src/crystal_mpd/filter.cr","line_number":24,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L24"},"def":{"name":"window","args":[{"name":"range","external_name":"range","restriction":"MPD::Range"}],"visibility":"Public","body":"@window = range\nself\n"},"external_var":false},{"html_id":"window:MPD::Range|Nil-instance-method","name":"window","abstract":false,"location":{"filename":"src/crystal_mpd/filter.cr","line_number":5,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/filter.cr#L5"},"def":{"name":"window","return_type":"MPD::Range | ::Nil","visibility":"Public","body":"@window"},"external_var":false}]},{"html_id":"crystal_mpd/MPD/Object","path":"MPD/Object.html","kind":"alias","full_name":"MPD::Object","name":"Object","abstract":false,"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":2,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L2"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":true,"aliased":"Hash(String, String)","aliased_html":"Hash(String, String)","const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"}},{"html_id":"crystal_mpd/MPD/Objects","path":"MPD/Objects.html","kind":"alias","full_name":"MPD::Objects","name":"Objects","abstract":false,"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":3,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L3"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":true,"aliased":"Array(Hash(String, String))","aliased_html":"Array(Hash(String, String))","const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"}},{"html_id":"crystal_mpd/MPD/Pair","path":"MPD/Pair.html","kind":"alias","full_name":"MPD::Pair","name":"Pair","abstract":false,"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":4,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L4"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":true,"aliased":"Array(String)","aliased_html":"Array(String)","const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"}},{"html_id":"crystal_mpd/MPD/Pairs","path":"MPD/Pairs.html","kind":"alias","full_name":"MPD::Pairs","name":"Pairs","abstract":false,"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":5,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L5"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":true,"aliased":"Array(Array(String))","aliased_html":"Array(Array(String))","const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"}},{"html_id":"crystal_mpd/MPD/Range","path":"MPD/Range.html","kind":"alias","full_name":"MPD::Range","name":"Range","abstract":false,"locations":[{"filename":"src/crystal_mpd/client.cr","line_number":6,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/client.cr#L6"}],"repository_name":"crystal_mpd","program":false,"enum":false,"alias":true,"aliased":"(Range(Int32, Int32) | Range(Int32, Nil) | Range(Nil, Int32) | Range(Nil, Nil))","aliased_html":"Range(Int32, Int32) | Range(Int32, Nil) | Range(Nil, Int32) | Range(Nil, Nil)","const":false,"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"}},{"html_id":"crystal_mpd/MPD/Tag","path":"MPD/Tag.html","kind":"enum","full_name":"MPD::Tag","name":"Tag","abstract":false,"ancestors":[{"html_id":"crystal_mpd/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crystal_mpd/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystal_mpd/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystal_mpd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystal_mpd/tag.cr","line_number":3,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L3"}],"repository_name":"crystal_mpd","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Artist","name":"Artist","value":"0"},{"id":"Artistsort","name":"Artistsort","value":"1"},{"id":"Album","name":"Album","value":"2"},{"id":"Albumsort","name":"Albumsort","value":"3"},{"id":"Albumartist","name":"Albumartist","value":"4"},{"id":"Albumartistsort","name":"Albumartistsort","value":"5"},{"id":"Title","name":"Title","value":"6"},{"id":"Titlesort","name":"Titlesort","value":"7"},{"id":"Track","name":"Track","value":"8"},{"id":"Name","name":"Name","value":"9"},{"id":"Genre","name":"Genre","value":"10"},{"id":"Mood","name":"Mood","value":"11"},{"id":"Date","name":"Date","value":"12"},{"id":"Originaldate","name":"Originaldate","value":"13"},{"id":"Composer","name":"Composer","value":"14"},{"id":"Composersort","name":"Composersort","value":"15"},{"id":"Performer","name":"Performer","value":"16"},{"id":"Conductor","name":"Conductor","value":"17"},{"id":"Work","name":"Work","value":"18"},{"id":"Ensemble","name":"Ensemble","value":"19"},{"id":"Movement","name":"Movement","value":"20"},{"id":"Movementnumber","name":"Movementnumber","value":"21"},{"id":"Showmovement","name":"Showmovement","value":"22"},{"id":"Location","name":"Location","value":"23"},{"id":"Grouping","name":"Grouping","value":"24"},{"id":"Comment","name":"Comment","value":"25"},{"id":"Disc","name":"Disc","value":"26"},{"id":"Label","name":"Label","value":"27"},{"id":"Musicbrainz_artistid","name":"Musicbrainz_artistid","value":"28"},{"id":"Musicbrainz_albumid","name":"Musicbrainz_albumid","value":"29"},{"id":"Musicbrainz_albumartistid","name":"Musicbrainz_albumartistid","value":"30"},{"id":"Musicbrainz_trackid","name":"Musicbrainz_trackid","value":"31"},{"id":"Musicbrainz_releasegroupid","name":"Musicbrainz_releasegroupid","value":"32"},{"id":"Musicbrainz_releasetrackid","name":"Musicbrainz_releasetrackid","value":"33"},{"id":"Musicbrainz_workid","name":"Musicbrainz_workid","value":"34"}],"namespace":{"html_id":"crystal_mpd/MPD","kind":"module","full_name":"MPD","name":"MPD"},"doc":"https://mpd.readthedocs.io/en/latest/protocol.html#tags","summary":"<p>https://mpd.readthedocs.io/en/latest/protocol.html#tags</p>","instance_methods":[{"html_id":"album?-instance-method","name":"album?","doc":"Returns `true` if this enum value equals `Album`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Album\">Album</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":6,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L6"},"def":{"name":"album?","visibility":"Public","body":"self == Album"},"external_var":false},{"html_id":"albumartist?-instance-method","name":"albumartist?","doc":"Returns `true` if this enum value equals `Albumartist`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Albumartist\">Albumartist</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":8,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L8"},"def":{"name":"albumartist?","visibility":"Public","body":"self == Albumartist"},"external_var":false},{"html_id":"albumartistsort?-instance-method","name":"albumartistsort?","doc":"Returns `true` if this enum value equals `Albumartistsort`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Albumartistsort\">Albumartistsort</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":9,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L9"},"def":{"name":"albumartistsort?","visibility":"Public","body":"self == Albumartistsort"},"external_var":false},{"html_id":"albumsort?-instance-method","name":"albumsort?","doc":"Returns `true` if this enum value equals `Albumsort`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Albumsort\">Albumsort</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":7,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L7"},"def":{"name":"albumsort?","visibility":"Public","body":"self == Albumsort"},"external_var":false},{"html_id":"artist?-instance-method","name":"artist?","doc":"Returns `true` if this enum value equals `Artist`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Artist\">Artist</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":4,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L4"},"def":{"name":"artist?","visibility":"Public","body":"self == Artist"},"external_var":false},{"html_id":"artistsort?-instance-method","name":"artistsort?","doc":"Returns `true` if this enum value equals `Artistsort`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Artistsort\">Artistsort</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":5,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L5"},"def":{"name":"artistsort?","visibility":"Public","body":"self == Artistsort"},"external_var":false},{"html_id":"comment?-instance-method","name":"comment?","doc":"Returns `true` if this enum value equals `Comment`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Comment\">Comment</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":29,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L29"},"def":{"name":"comment?","visibility":"Public","body":"self == Comment"},"external_var":false},{"html_id":"composer?-instance-method","name":"composer?","doc":"Returns `true` if this enum value equals `Composer`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Composer\">Composer</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":18,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L18"},"def":{"name":"composer?","visibility":"Public","body":"self == Composer"},"external_var":false},{"html_id":"composersort?-instance-method","name":"composersort?","doc":"Returns `true` if this enum value equals `Composersort`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Composersort\">Composersort</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":19,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L19"},"def":{"name":"composersort?","visibility":"Public","body":"self == Composersort"},"external_var":false},{"html_id":"conductor?-instance-method","name":"conductor?","doc":"Returns `true` if this enum value equals `Conductor`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Conductor\">Conductor</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":21,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L21"},"def":{"name":"conductor?","visibility":"Public","body":"self == Conductor"},"external_var":false},{"html_id":"date?-instance-method","name":"date?","doc":"Returns `true` if this enum value equals `Date`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Date\">Date</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":16,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L16"},"def":{"name":"date?","visibility":"Public","body":"self == Date"},"external_var":false},{"html_id":"disc?-instance-method","name":"disc?","doc":"Returns `true` if this enum value equals `Disc`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Disc\">Disc</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":30,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L30"},"def":{"name":"disc?","visibility":"Public","body":"self == Disc"},"external_var":false},{"html_id":"ensemble?-instance-method","name":"ensemble?","doc":"Returns `true` if this enum value equals `Ensemble`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Ensemble\">Ensemble</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":23,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L23"},"def":{"name":"ensemble?","visibility":"Public","body":"self == Ensemble"},"external_var":false},{"html_id":"genre?-instance-method","name":"genre?","doc":"Returns `true` if this enum value equals `Genre`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Genre\">Genre</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":14,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L14"},"def":{"name":"genre?","visibility":"Public","body":"self == Genre"},"external_var":false},{"html_id":"grouping?-instance-method","name":"grouping?","doc":"Returns `true` if this enum value equals `Grouping`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Grouping\">Grouping</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":28,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L28"},"def":{"name":"grouping?","visibility":"Public","body":"self == Grouping"},"external_var":false},{"html_id":"label?-instance-method","name":"label?","doc":"Returns `true` if this enum value equals `Label`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Label\">Label</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":31,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L31"},"def":{"name":"label?","visibility":"Public","body":"self == Label"},"external_var":false},{"html_id":"location?-instance-method","name":"location?","doc":"Returns `true` if this enum value equals `Location`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Location\">Location</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":27,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L27"},"def":{"name":"location?","visibility":"Public","body":"self == Location"},"external_var":false},{"html_id":"mood?-instance-method","name":"mood?","doc":"Returns `true` if this enum value equals `Mood`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Mood\">Mood</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":15,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L15"},"def":{"name":"mood?","visibility":"Public","body":"self == Mood"},"external_var":false},{"html_id":"movement?-instance-method","name":"movement?","doc":"Returns `true` if this enum value equals `Movement`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Movement\">Movement</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":24,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L24"},"def":{"name":"movement?","visibility":"Public","body":"self == Movement"},"external_var":false},{"html_id":"movementnumber?-instance-method","name":"movementnumber?","doc":"Returns `true` if this enum value equals `Movementnumber`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Movementnumber\">Movementnumber</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":25,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L25"},"def":{"name":"movementnumber?","visibility":"Public","body":"self == Movementnumber"},"external_var":false},{"html_id":"musicbrainz_albumartistid?-instance-method","name":"musicbrainz_albumartistid?","doc":"Returns `true` if this enum value equals `Musicbrainz_albumartistid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_albumartistid\">Musicbrainz_albumartistid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":34,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L34"},"def":{"name":"musicbrainz_albumartistid?","visibility":"Public","body":"self == Musicbrainz_albumartistid"},"external_var":false},{"html_id":"musicbrainz_albumid?-instance-method","name":"musicbrainz_albumid?","doc":"Returns `true` if this enum value equals `Musicbrainz_albumid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_albumid\">Musicbrainz_albumid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":33,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L33"},"def":{"name":"musicbrainz_albumid?","visibility":"Public","body":"self == Musicbrainz_albumid"},"external_var":false},{"html_id":"musicbrainz_artistid?-instance-method","name":"musicbrainz_artistid?","doc":"Returns `true` if this enum value equals `Musicbrainz_artistid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_artistid\">Musicbrainz_artistid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":32,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L32"},"def":{"name":"musicbrainz_artistid?","visibility":"Public","body":"self == Musicbrainz_artistid"},"external_var":false},{"html_id":"musicbrainz_releasegroupid?-instance-method","name":"musicbrainz_releasegroupid?","doc":"Returns `true` if this enum value equals `Musicbrainz_releasegroupid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_releasegroupid\">Musicbrainz_releasegroupid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":36,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L36"},"def":{"name":"musicbrainz_releasegroupid?","visibility":"Public","body":"self == Musicbrainz_releasegroupid"},"external_var":false},{"html_id":"musicbrainz_releasetrackid?-instance-method","name":"musicbrainz_releasetrackid?","doc":"Returns `true` if this enum value equals `Musicbrainz_releasetrackid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_releasetrackid\">Musicbrainz_releasetrackid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":37,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L37"},"def":{"name":"musicbrainz_releasetrackid?","visibility":"Public","body":"self == Musicbrainz_releasetrackid"},"external_var":false},{"html_id":"musicbrainz_trackid?-instance-method","name":"musicbrainz_trackid?","doc":"Returns `true` if this enum value equals `Musicbrainz_trackid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_trackid\">Musicbrainz_trackid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":35,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L35"},"def":{"name":"musicbrainz_trackid?","visibility":"Public","body":"self == Musicbrainz_trackid"},"external_var":false},{"html_id":"musicbrainz_workid?-instance-method","name":"musicbrainz_workid?","doc":"Returns `true` if this enum value equals `Musicbrainz_workid`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Musicbrainz_workid\">Musicbrainz_workid</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":38,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L38"},"def":{"name":"musicbrainz_workid?","visibility":"Public","body":"self == Musicbrainz_workid"},"external_var":false},{"html_id":"name?-instance-method","name":"name?","doc":"Returns `true` if this enum value equals `Name`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Name\">Name</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":13,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L13"},"def":{"name":"name?","visibility":"Public","body":"self == Name"},"external_var":false},{"html_id":"originaldate?-instance-method","name":"originaldate?","doc":"Returns `true` if this enum value equals `Originaldate`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Originaldate\">Originaldate</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":17,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L17"},"def":{"name":"originaldate?","visibility":"Public","body":"self == Originaldate"},"external_var":false},{"html_id":"performer?-instance-method","name":"performer?","doc":"Returns `true` if this enum value equals `Performer`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Performer\">Performer</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":20,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L20"},"def":{"name":"performer?","visibility":"Public","body":"self == Performer"},"external_var":false},{"html_id":"showmovement?-instance-method","name":"showmovement?","doc":"Returns `true` if this enum value equals `Showmovement`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Showmovement\">Showmovement</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":26,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L26"},"def":{"name":"showmovement?","visibility":"Public","body":"self == Showmovement"},"external_var":false},{"html_id":"title?-instance-method","name":"title?","doc":"Returns `true` if this enum value equals `Title`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Title\">Title</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":10,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L10"},"def":{"name":"title?","visibility":"Public","body":"self == Title"},"external_var":false},{"html_id":"titlesort?-instance-method","name":"titlesort?","doc":"Returns `true` if this enum value equals `Titlesort`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Titlesort\">Titlesort</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":11,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L11"},"def":{"name":"titlesort?","visibility":"Public","body":"self == Titlesort"},"external_var":false},{"html_id":"track?-instance-method","name":"track?","doc":"Returns `true` if this enum value equals `Track`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Track\">Track</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":12,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L12"},"def":{"name":"track?","visibility":"Public","body":"self == Track"},"external_var":false},{"html_id":"work?-instance-method","name":"work?","doc":"Returns `true` if this enum value equals `Work`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../MPD/Tag.html#Work\">Work</a></code></p>","abstract":false,"location":{"filename":"src/crystal_mpd/tag.cr","line_number":22,"url":"https://github.com/mamantoha/crystal_mpd/blob/b3782ce4708f082d92ab8397acb91c7a4170cfa3/src/crystal_mpd/tag.cr#L22"},"def":{"name":"work?","visibility":"Public","body":"self == Work"},"external_var":false}]}]}]}})